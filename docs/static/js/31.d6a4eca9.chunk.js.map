{"version":3,"file":"static/js/31.d6a4eca9.chunk.js","mappings":"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","sources":["config/skills.config.ts","services/skills.service.dynamic.ts","components/Skills.tsx"],"sourcesContent":["export interface CategoryConfig {\n  [key: string]: {\n    title: string;\n    order: number;\n    icon?: string;\n    color?: string;\n  };\n}\n\nexport const defaultCategoryConfig: CategoryConfig = {\n  'programming': {\n    title: 'Programming Languages',\n    order: 1,\n    icon: '💻',\n    color: '#4A90E2'\n  },\n  'framework': {\n    title: 'Frameworks & Libraries',\n    order: 2,\n    icon: '🚀',\n    color: '#50C878'\n  },\n  'database': {\n    title: 'Databases',\n    order: 3,\n    icon: '🗄️',\n    color: '#FF6B35'\n  },\n  'cloud': {\n    title: 'Cloud & DevOps',\n    order: 4,\n    icon: '☁️',\n    color: '#FF9500'\n  },\n  'tool': {\n    title: 'Tools & IDEs',\n    order: 5,\n    icon: '🛠️',\n    color: '#8E44AD'\n  },\n  'design': {\n    title: 'Design & UI/UX',\n    order: 6,\n    icon: '🎨',\n    color: '#E74C3C'\n  },\n  'soft-skill': {\n    title: 'Soft Skills',\n    order: 7,\n    icon: '🤝',\n    color: '#2ECC71'\n  },\n  'other': {\n    title: 'Other Skills',\n    order: 8,\n    icon: '🔧',\n    color: '#95A5A6'\n  }\n};\n\n// You can override this config via environment variables or external config\nexport const getCategoryConfig = (): CategoryConfig => {\n  // You could load this from an API endpoint or environment variables\n  // For now, return the default configuration\n  return defaultCategoryConfig;\n};","import { getCategoryConfig, CategoryConfig } from '../config/skills.config';\n\ninterface ApiSkill {\n  _id: string;\n  name: string;\n  category: string;\n  level: string;\n  proficiency: number;\n  yearsOfExperience: number;\n  description: string;\n  icon: string;\n  color: string;\n  isCore: boolean;\n  isFeatured: boolean;\n  endorsements: number;\n  isPublic: boolean;\n  order: number;\n}\n\ninterface ApiResponse {\n  success: boolean;\n  data: ApiSkill[];\n  meta?: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n    hasNext: boolean;\n    hasPrev: boolean;\n  };\n}\n\ninterface SkillCategory {\n  title: string;\n  skills: {\n    name: string;\n    level: number;\n    icon: string;\n    color?: string;\n    description?: string;\n    yearsOfExperience?: number;\n    isCore?: boolean;\n    isFeatured?: boolean;\n  }[];\n}\n\ninterface SkillsData {\n  skills: SkillCategory[];\n}\n\nexport class SkillsService {  protected baseUrl: string;\n\n  constructor() {\n    this.baseUrl = process.env.REACT_APP_BACKEND_API_URL || 'http://localhost:5000';\n  }\n\n  async getAllSkills(): Promise<SkillsData> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/skills?limit=100`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const apiResponse: ApiResponse = await response.json();\n      \n      if (!apiResponse.success) {\n        throw new Error('API request was not successful');\n      }\n\n      return this.transformToSkillsFormat(apiResponse.data);\n    } catch (error) {\n      console.error('Error fetching skills from API:', error);\n      \n      try {\n        const skillsData = await import('../assets/data/skills.json');\n        return skillsData.default;\n      } catch (fallbackError) {\n        console.error('Error loading fallback skills data:', fallbackError);\n        return { skills: [] };\n      }\n    }\n  }\n\n  protected transformToSkillsFormat(apiSkills: ApiSkill[]): SkillsData {\n    const publicSkills = apiSkills\n      .filter(skill => skill.isPublic)\n      .sort((a, b) => a.order - b.order);\n\n    const categoryMap = new Map<string, ApiSkill[]>();\n    \n    publicSkills.forEach(skill => {\n      const categoryTitle = this.formatCategoryTitle(skill.category);\n      if (!categoryMap.has(categoryTitle)) {\n        categoryMap.set(categoryTitle, []);\n      }\n      categoryMap.get(categoryTitle)!.push(skill);\n    });\n\n    const categoryOrder = this.getCategoryOrder();\n    \n    const sortedCategories = Array.from(categoryMap.entries()).sort(([a], [b]) => {\n      const aIndex = categoryOrder.indexOf(a);\n      const bIndex = categoryOrder.indexOf(b);\n      \n      if (aIndex !== -1 && bIndex !== -1) {\n        return aIndex - bIndex;\n      }\n      \n      if (aIndex !== -1) return -1;\n      if (bIndex !== -1) return 1;\n      \n      return a.localeCompare(b);\n    });\n\n    const skills: SkillCategory[] = sortedCategories.map(([title, categorySkills]) => ({\n      title,\n      skills: categorySkills.map(skill => ({\n        name: skill.name,\n        level: skill.proficiency,\n        icon: skill.icon,\n        color: skill.color,\n        description: skill.description,\n        yearsOfExperience: skill.yearsOfExperience,\n        isCore: skill.isCore,\n        isFeatured: skill.isFeatured\n      }))\n    }));\n\n    return { skills };\n  }\n\n  protected formatCategoryTitle(category: string): string {\n    const categoryTitleMap: Record<string, string> = {\n      'programming': 'Programming Languages',\n      'framework': 'Frameworks & Libraries',\n      'database': 'Databases',\n      'cloud': 'Cloud & DevOps',\n      'tool': 'Tools & IDEs',\n      'design': 'Design & UI/UX',\n      'soft-skill': 'Soft Skills',\n      'other': 'Other Skills'\n    };\n\n    return categoryTitleMap[category.toLowerCase()] || this.toTitleCase(category);\n  }\n\n  protected toTitleCase(str: string): string {\n    return str.replace(/\\w\\S*/g, (txt) => \n      txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n    );\n  }\n\n  protected getCategoryOrder(): string[] {\n    return [\n      'Programming Languages',\n      'Frameworks & Libraries', \n      'Databases',\n      'Cloud & DevOps',\n      'Tools & IDEs',\n      'Design & UI/UX',\n      'Soft Skills',\n      'Other Skills'\n    ];\n  }\n}\n\nclass DynamicSkillsService extends SkillsService {\n  private categoryConfig: CategoryConfig;\n  private cache: { data: SkillsData | null; timestamp: number } = { data: null, timestamp: 0 };\n  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\n  constructor() {\n    super();\n    this.categoryConfig = getCategoryConfig();\n  }\n\n  async getAllSkills(): Promise<SkillsData> {\n    // Check cache first\n    const now = Date.now();\n    if (this.cache.data && (now - this.cache.timestamp) < this.CACHE_DURATION) {\n      console.log('Returning cached skills data');\n      return this.cache.data;\n    }\n\n    try {\n      console.log('Fetching fresh skills data from API');\n      const response = await fetch(`${this.baseUrl}/api/skills?limit=100`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const apiResponse: ApiResponse = await response.json();\n      \n      if (!apiResponse.success) {\n        throw new Error('API request was not successful');\n      }\n\n      const skillsData = this.transformToSkillsFormat(apiResponse.data);\n      \n      // Update cache\n      this.cache = {\n        data: skillsData,\n        timestamp: now\n      };\n\n      return skillsData;\n    } catch (error) {\n      console.error('Error fetching skills from API:', error);\n      \n      // Return cached data if available, even if expired\n      if (this.cache.data) {\n        console.log('Returning expired cached data due to API error');\n        return this.cache.data;\n      }\n      \n      try {\n        const skillsData = await import('../assets/data/skills.json');\n        return skillsData.default;\n      } catch (fallbackError) {\n        console.error('Error loading fallback skills data:', fallbackError);\n        return { skills: [] };\n      }\n    }\n  }\n\n  // Method to clear cache if needed\n  clearCache(): void {\n    this.cache = { data: null, timestamp: 0 };\n  }\n\n  protected formatCategoryTitle(category: string): string {\n    const config = this.categoryConfig[category.toLowerCase()];\n    return config?.title || this.toTitleCase(category);\n  }\n\n  protected getCategoryOrder(): string[] {\n    return Object.values(this.categoryConfig)\n      .sort((a, b) => a.order - b.order)\n      .map(config => config.title);\n  }\n\n  // Method to update category configuration dynamically\n  updateCategoryConfig(newConfig: CategoryConfig): void {\n    this.categoryConfig = { ...this.categoryConfig, ...newConfig };\n  }\n\n  // Get category configuration\n  getCategoryConfig(): CategoryConfig {\n    return this.categoryConfig;\n  }\n\n  // Get category info for a specific category\n  getCategoryInfo(category: string) {\n    return this.categoryConfig[category.toLowerCase()];\n  }\n\n  // Additional methods for enhanced functionality\n  async getFeaturedSkills(): Promise<ApiSkill[]> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/skills?featured=true&limit=20`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const apiResponse: ApiResponse = await response.json();\n      return apiResponse.success ? apiResponse.data : [];\n    } catch (error) {\n      console.error('Error fetching featured skills:', error);\n      return [];\n    }\n  }\n\n  async getSkillsByCategory(category: string): Promise<ApiSkill[]> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/skills?category=${category}&limit=50`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const apiResponse: ApiResponse = await response.json();\n      return apiResponse.success ? apiResponse.data : [];\n    } catch (error) {\n      console.error(`Error fetching skills for category ${category}:`, error);\n      return [];\n    }\n  }\n\n  async getCoreSkills(): Promise<ApiSkill[]> {\n    try {\n      const response = await fetch(`${this.baseUrl}/api/skills?limit=100`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const apiResponse: ApiResponse = await response.json();\n      return apiResponse.success ? apiResponse.data.filter(skill => skill.isCore) : [];\n    } catch (error) {\n      console.error('Error fetching core skills:', error);\n      return [];\n    }\n  }\n}\n\nexport const dynamicSkillsService = new DynamicSkillsService();\n\n\n// Export types for use in components\nexport type { SkillsData, SkillCategory, ApiSkill };","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { dynamicSkillsService } from '../services/skills.service.dynamic';\n\ninterface Skill {\n  name: string;\n  level: number;\n  icon: string;\n  color?: string;\n  description?: string;\n  yearsOfExperience?: number;\n  isCore?: boolean;\n  isFeatured?: boolean;\n}\n\ninterface SkillCategory {\n  title: string;\n  skills: Skill[];\n}\n\nconst Skills: React.FC = () => {\n  const [skillCategories, setSkillCategories] = React.useState<SkillCategory[]>([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n  const hasFetched = React.useRef(false);\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchSkills = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        console.log('Fetching skills from API...'); // Debug log\n        const skillsData = await dynamicSkillsService.getAllSkills();\n        \n        // Check if the request was aborted\n        if (abortController.signal.aborted) {\n          return;\n        }\n        \n        console.log('Skills data received:', skillsData); // Debug log\n        \n        if (skillsData && skillsData.skills && Array.isArray(skillsData.skills)) {\n          setSkillCategories(skillsData.skills);\n        } else {\n          console.error('Invalid skills data structure:', skillsData);\n          setError('Invalid data structure received from API');\n          setSkillCategories([]);\n        }\n      } catch (err) {\n        if (abortController.signal.aborted) {\n          return; // Don't update state if component was unmounted\n        }\n        \n        console.error('Error fetching skills:', err);\n        setError(err instanceof Error ? err.message : 'Failed to fetch skills');\n        setSkillCategories([]);\n      } finally {\n        if (!abortController.signal.aborted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchSkills();\n\n    // Cleanup function\n    return () => {\n      abortController.abort();\n    };\n  }, []); // Empty dependency array\n\n  const handleRetry = () => {\n    hasFetched.current = false;\n    setLoading(true);\n    setError(null);\n    // Trigger re-fetch by updating a state that's in the dependency array\n    window.location.reload();\n  };\n\n  if (loading) {\n    return (\n      <section id=\"skills\" className=\"min-h-screen flex items-center justify-center bg-gradient-to-br bg-gray-50 dark:bg-gray-800\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600 dark:text-gray-400\">Loading skills...</p>\n        </div>\n      </section>\n    );\n  }\n\n  if (error) {\n    return (\n      <section id=\"skills\" className=\"min-h-screen flex items-center justify-center bg-gradient-to-br bg-gray-50 dark:bg-gray-800\">\n        <div className=\"text-center\">\n          <p className=\"text-red-600 dark:text-red-400\">Error: {error}</p>\n          <button \n            onClick={handleRetry}\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Retry\n          </button>\n        </div>\n      </section>\n    );\n  }\n\n  if (!skillCategories || skillCategories.length === 0) {\n    return (\n      <section id=\"skills\" className=\"min-h-screen flex items-center justify-center bg-gradient-to-br bg-gray-50 dark:bg-gray-800\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600 dark:text-gray-400\">No skills data available</p>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"skills\" className=\"min-h-screen flex items-center justify-center bg-gradient-to-br bg-gray-50 dark:bg-gray-800\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          viewport={{ once: true }}\n          className=\"text-center mb-8\"\n        >\n          <h2 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4 font-poppins\">\n            Technical <span className=\"gradient-text\">Skills</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto\">\n            Technologies and tools I use to bring ideas to life\n          </p>\n        </motion.div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {skillCategories.map((category, categoryIndex) => (\n            <motion.div\n              key={category.title}\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: categoryIndex * 0.1 }}\n              viewport={{ once: true }}\n              className=\"bg-white dark:bg-gray-900 rounded-xl p-6 card-shadow hover:shadow-xl transition-all duration-300\"\n            >\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-6 text-center\">\n                {category.title}\n              </h3>\n              \n              <div className=\"space-y-4\">\n                {category.skills && Array.isArray(category.skills) ? (\n                  category.skills.map((skill, skillIndex) => (\n                    <motion.div\n                      key={`${skill.name}-${skillIndex}`}\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.6, delay: (categoryIndex * 0.1) + (skillIndex * 0.05) }}\n                      viewport={{ once: true }}\n                      className=\"relative\"\n                    >\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-lg\">{skill.icon}</span>\n                          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                            {skill.name}\n                          </span>\n                        </div>\n                        <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          {skill.level}%\n                        </span>\n                      </div>\n                      \n                      <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                        <motion.div\n                          initial={{ width: 0 }}\n                          whileInView={{ width: `${skill.level}%` }}\n                          transition={{ duration: 1, delay: (categoryIndex * 0.1) + (skillIndex * 0.05) }}\n                          viewport={{ once: true }}\n                          className=\"gradient-bg h-2 rounded-full\"\n                          style={{ \n                            backgroundColor: skill.color || undefined \n                          }}\n                        />\n                      </div>\n                      \n                      {skill.description && (\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                          {skill.description}\n                        </p>\n                      )}\n                    </motion.div>\n                  ))\n                ) : (\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    No skills available in this category\n                  </p>\n                )}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;\n"],"names":["defaultCategoryConfig","title","order","icon","color","SkillsService","constructor","baseUrl","this","process","getAllSkills","response","fetch","concat","ok","Error","status","apiResponse","json","success","transformToSkillsFormat","data","error","console","default","fallbackError","skills","apiSkills","publicSkills","filter","skill","isPublic","sort","a","b","categoryMap","Map","forEach","categoryTitle","formatCategoryTitle","category","has","set","get","push","categoryOrder","getCategoryOrder","Array","from","entries","_ref","_ref2","aIndex","indexOf","bIndex","localeCompare","map","_ref3","categorySkills","name","level","proficiency","description","yearsOfExperience","isCore","isFeatured","toLowerCase","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","dynamicSkillsService","super","categoryConfig","cache","timestamp","CACHE_DURATION","now","Date","log","skillsData","clearCache","config","Object","values","updateCategoryConfig","newConfig","_objectSpread","getCategoryConfig","getCategoryInfo","getFeaturedSkills","getSkillsByCategory","getCoreSkills","Skills","skillCategories","setSkillCategories","React","loading","setLoading","setError","hasFetched","abortController","AbortController","async","signal","aborted","isArray","err","message","fetchSkills","abort","handleRetry","current","window","location","reload","_jsx","id","className","children","_jsxs","onClick","length","motion","div","initial","opacity","y","whileInView","transition","duration","viewport","once","categoryIndex","delay","skillIndex","x","width","style","backgroundColor","undefined"],"sourceRoot":""}