{"version":3,"file":"static/js/861.ea71edd2.chunk.js","mappings":"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","sources":["shared/components/UserMenu.tsx","shared/components/Navbar.tsx","shared/components/Footer.tsx","features/portfolio/portfolioRoutes.ts","features/portfolio/PortfolioLayout.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { UserCircle, Settings, LogOut, User, Bell, Mail, ExternalLink } from 'lucide-react';\n\ninterface UserMenuProps {\n  user: { firstName?: string; lastName?: string; email?: string; role?: string } | null;\n  onLogout: () => void;\n  notificationsCount?: number;\n  messagesCount?: number;\n  isAdmin?: boolean;\n}\n\nconst UserMenu: React.FC<UserMenuProps> = ({\n  user,\n  onLogout,\n  notificationsCount = 0,\n  messagesCount = 0,\n  isAdmin = false,\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const navigate = useNavigate();\n\n  // Close dropdown when clicking outside\n  React.useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    }\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [dropdownOpen]);\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      {/* Notification Icon */}\n      <Link to={isAdmin ? \"/admin/notifications\" : \"/notifications\"} className=\"relative flex items-center text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400\">\n        <Bell className=\"w-6 h-6\" />\n        {notificationsCount > 0 && (\n          <span className=\"absolute -top-1 -right-2 bg-blue-500 text-white text-xs rounded-full px-1.5 py-0.5\">{notificationsCount}</span>\n        )}\n      </Link>\n      {/* Mail Icon */}\n      <Link to={isAdmin ? \"/admin/messages\" : \"/messages\"} className=\"relative flex items-center text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400\">\n        <Mail className=\"w-6 h-6\" />\n        {messagesCount > 0 && (\n          <span className=\"absolute -top-1 -right-2 bg-red-500 text-white text-xs rounded-full px-1.5 py-0.5\">{messagesCount}</span>\n        )}\n      </Link>\n      {/* User name (desktop only) */}\n      <span\n        className=\"text-sm text-gray-700 dark:text-gray-300 font-medium hidden sm:inline cursor-pointer\"\n        onClick={() => navigate(isAdmin ? '/admin/profile' : '/profile')}\n      >\n        {user?.firstName} {user?.lastName}\n      </span>\n      {/* User avatar dropdown */}\n      <div className=\"relative\" ref={dropdownRef}>\n        <button\n          onClick={() => setDropdownOpen((open) => !open)}\n          className=\"flex items-center focus:outline-none\"\n          aria-label=\"User menu\"\n        >\n          <UserCircle className=\"w-9 h-9 text-gray-400 dark:text-gray-300\" />\n        </button>\n        {dropdownOpen && (\n          <div className=\"absolute right-0 mt-2 w-56 bg-white dark:bg-gray-800 rounded-md shadow-lg z-50 py-1\">\n            {/* Username on mobile */}\n            <button\n              className=\"block w-full text-left px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center sm:hidden\"\n              onClick={() => {\n                setDropdownOpen(false);\n                navigate(isAdmin ? '/admin/profile' : '/profile');\n              }}\n            >\n              <UserCircle className=\"w-4 h-4 mr-2\" />\n              {user?.firstName} {user?.lastName}\n            </button>\n            <Link\n              to={isAdmin ? \"/admin/profile\" : \"/profile\"}\n              className=\"block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n            >\n              <User className=\"w-4 h-4 mr-2\" /> Profile\n            </Link>\n            <Link\n              to={isAdmin ? \"/admin/settings\" : \"/settings\"}\n              className=\"block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n            >\n              <Settings className=\"w-4 h-4 mr-2\" /> Settings\n            </Link>\n            {isAdmin && (\n              <Link\n                to=\"/\"\n                className=\"block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <ExternalLink className=\"w-4 h-4 mr-2\" />\n                View Portfolio\n              </Link>\n            )}\n            <button\n              onClick={onLogout}\n              className=\"w-full text-left px-4 py-2 text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n            >\n              <LogOut className=\"w-4 h-4 mr-2\" /> Logout\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserMenu;","import React, { useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../app/providers/AuthContext';\nimport { useTheme } from '../../app/providers/ThemeContext';\nimport {\n  Home,\n  User as UserIcon,\n  Award,\n  FileText,\n  Folder,\n  MessageCircle,\n  BadgeCheck,\n  Mail,\n  LogIn,\n  Shield,\n} from 'lucide-react';\nimport UserMenu from './UserMenu';\n\nconst Navbar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { isAuthenticated, user, logout } = useAuth();\n  const { theme, toggleTheme, isLoading } = useTheme();\n\n  const navItems = [\n    { name: 'Home', path: '/', icon: <Home className=\"w-4 h-4 mr-1\" /> },\n    { name: 'About', path: '/about', icon: <UserIcon className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Skills', path: '/skills', icon: <Award className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Resume', path: '/resume', icon: <FileText className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Projects', path: '/projects', icon: <Folder className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Testimonials', path: '/testimonials', icon: <MessageCircle className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Certificates', path: '/certificates', icon: <BadgeCheck className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Contact', path: '/contact', icon: <Mail className=\"w-4 h-4 mr-1\" /> },\n  ];\n\n  const isActive = (path: string) => location.pathname === path;\n\n  // Add your logout logic here\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  return (\n    <nav className={`bg-white dark:bg-gray-900 shadow-lg fixed w-full z-50 transition-colors duration-200 ${isLoading ? 'opacity-0' : 'opacity-100'}`}>\n      <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16 w-full\">\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center flex-1 min-w-0\">\n            {/* Left: User/Site Name and Theme Toggle */}\n            <div className=\"flex items-center flex-shrink-0\">\n              <Link to=\"/\" className=\"flex-shrink-0\">\n                <span className=\"text-2xl font-bold gradient-text\">Amol Deole</span>\n              </Link>\n              <button\n                onClick={toggleTheme}\n                disabled={isLoading}\n                className=\"ml-3 p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors disabled:opacity-50\"\n                title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              >\n                {theme === 'dark' ? '☀️' : '🌙'}\n              </button>\n            </div>\n            {/* Nav links */}\n            <div className=\"flex items-center space-x-4 flex-1 min-w-0 justify-end\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  className={`px-3 py-2 rounded-md text-sm font-medium flex items-center transition-colors ${isActive(item.path)\n                      ? 'text-blue-600 dark:text-blue-400'\n                      : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'\n                    }`}\n                >\n                  {item.icon}\n                  {item.name}\n                </Link>\n              ))}\n\n              {/* Admin Panel only for admin */}\n              {isAuthenticated && user?.role === 'admin' && (\n                <Link\n                  to=\"/admin\"\n                  className=\"dark:text-gray-300 border-2 p-2 py-1 rounded-full hover:bg-primary-900 hover:text-white transition-all duration-300 flex items-center gap-2\"\n                >\n                  <Shield className=\"w-4 h-4 mr-1\" />\n                  Admin Panel\n                </Link>\n              )}\n\n              {/* UserMenu for authenticated users, Login for guests */}\n              {isAuthenticated ? (\n                <UserMenu user={user} onLogout={handleLogout} />\n              ) : (\n                <Link\n                  to=\"/login\"\n                  className=\"border-2 border-primary-600 text-primary-600 dark:text-primary-400 dark:border-primary-400 px-6 py-2 rounded-full font-semibold hover:bg-primary-600 hover:text-white dark:hover:bg-primary-400 dark:hover:text-gray-900 transition-all duration-300 flex items-center gap-2 text-sm\"\n                >\n                  <LogIn className=\"w-4 h-4 mr-1\" />\n                  Login\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden flex items-center\">\n            <button\n              onClick={toggleTheme}\n              disabled={isLoading}\n              className=\"p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 mr-2 transition-colors disabled:opacity-50\"\n            >\n              {theme === 'dark' ? '☀️' : '🌙'}\n            </button>\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                {isOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isOpen && (\n          <div className=\"md:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${isActive(item.path)\n                      ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20'\n                      : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'\n                    }`}\n                  onClick={() => setIsOpen(false)}\n                >\n                  <span className=\"flex items-center\">\n                    {item.icon}\n                    {item.name}\n                  </span>\n                </Link>\n              ))}\n              {/* Admin Panel only for admin */}\n              {isAuthenticated && user?.role === 'admin' && (\n                <Link\n                  to=\"/admin\"\n                  className=\"block px-3 py-2 rounded-md text-base font-medium bg-blue-600 text-white hover:bg-blue-700 transition-colors\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  Admin Panel\n                </Link>\n              )}\n              {/* UserMenu for authenticated users, Login for guests */}\n              {isAuthenticated ? (\n                <UserMenu user={user} onLogout={handleLogout} />\n              ) : (\n                <Link\n                  to=\"/login\"\n                  className=\"block px-3 py-2 rounded-md text-base font-medium bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  Login\n                </Link>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Footer: React.FC = () => (\n  <footer className=\"bg-gray-900 dark:bg-black text-white py-4\">\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-4\">\n      <div className=\"text-center text-gray-400 text-sm flex flex-wrap justify-center items-center gap-2\">\n        <span>© {new Date().getFullYear()} Amol Deole. All rights reserved.</span>\n        <span className=\"hidden sm:inline\">|</span>\n        <span>Designed by Amol Deole · Built with React, TypeScript & Tailwind CSS</span>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;","import { lazy } from 'react';\n\nexport const portfolioRoutes = [\n  {\n    path: '',\n    element: lazy(() => import('./pages/PortfolioHome')),\n  },\n  {\n    path: 'about',\n    element: lazy(() => import('./pages/About')),\n  },\n  {\n    path: 'certificates',\n    element: lazy(() => import('./pages/Certificates')),\n  },\n  {\n    path: 'contact',\n    element: lazy(() => import('./pages/Contact')),\n  },\n  {\n    path: 'experience',\n    element: lazy(() => import('./pages/Experience')),\n  },\n  {\n    path: 'projects',\n    element: lazy(() => import('./pages/Projects')),\n  },\n  {\n    path: 'resume',\n    element: lazy(() => import('./pages/Resume')),\n  },\n  {\n    path: 'skills',\n    element: lazy(() => import('./pages/Skills')),\n  },\n  {\n    path: 'technologies',\n    element: lazy(() => import('./pages/Technologies')),\n  },\n  {\n    path: 'testimonials',\n    element: lazy(() => import('./pages/Testimonials')),\n  },\n];\n","import React, { Suspense } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\nimport Navbar from '../../shared/components/Navbar';\nimport Footer from '../../shared/components/Footer';\nimport { portfolioRoutes } from './portfolioRoutes';\nimport ChatWidget from '../chat/ChatWidget/ChatWidget';\n\nconst PortfolioLayout: React.FC = () => (\n  <div className=\"flex flex-col min-h-screen\">\n    <Navbar />\n    <main className=\"flex-1 flex flex-col\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          {portfolioRoutes.map(({ path, element: Element }) => (\n            <Route\n              key={path || 'index'}\n              path={path}\n              element={<Element />}\n            />\n          ))}\n          <Route index element={React.createElement(portfolioRoutes[0].element)} />\n        </Routes>\n      </Suspense>\n      <Outlet />\n    </main>\n    <Footer />\n    <ChatWidget /> {/* <-- Add this line */}\n  </div>\n);\n\nexport default PortfolioLayout;"],"names":["_ref","user","onLogout","notificationsCount","messagesCount","isAdmin","dropdownOpen","setDropdownOpen","useState","dropdownRef","useRef","navigate","useNavigate","React","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","className","children","Link","to","_jsx","Bell","Mail","onClick","firstName","lastName","ref","open","UserCircle","User","Settings","ExternalLink","LogOut","Navbar","isOpen","setIsOpen","location","useLocation","isAuthenticated","logout","useAuth","theme","toggleTheme","isLoading","useTheme","navItems","name","path","icon","Home","UserIcon","Award","FileText","Folder","MessageCircle","BadgeCheck","isActive","pathname","handleLogout","concat","disabled","title","map","item","role","Shield","UserMenu","LogIn","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Footer","Date","getFullYear","portfolioRoutes","element","lazy","PortfolioLayout","Suspense","fallback","Routes","Element","Route","index","Outlet","ChatWidget"],"sourceRoot":""}