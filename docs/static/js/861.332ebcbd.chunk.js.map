{"version":3,"file":"static/js/861.332ebcbd.chunk.js","mappings":"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","sources":["features/chat/ChatWidget/ChatWidget.tsx","shared/components/UserMenu.tsx","shared/components/Navbar.tsx","shared/components/Footer.tsx","features/portfolio/portfolioRoutes.ts","features/portfolio/PortfolioLayout.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  MessageCircle,\n  X,\n  Send,\n  Phone,\n  Video,\n  Paperclip,\n  Smile,\n  Search,\n  ArrowLeft,\n  Reply,\n  Check,\n  CheckCheck,\n} from 'lucide-react';\nimport { chatService } from '../../../shared/services/chat.service';\nimport { Chat, Message } from '../../../shared/types';\nimport { authService } from '../../../shared/services/auth.service';\nimport { socketService } from '../../../shared/services/socket.service';\nimport { useNavigate } from 'react-router-dom';\n\nconst ChatWidget: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [replyingTo, setReplyingTo] = useState<Message | null>(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const [otherUserTyping, setOtherUserTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n  const currentUser = authService.getUser();\n  const navigate = useNavigate();\n\n  // Auth check\n  useEffect(() => {\n    setIsAuthenticated(authService.isAuthenticated());\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) loadChats();\n  }, [isAuthenticated]);\n\n  // Load messages when chat is selected\n  useEffect(() => {\n    if (selectedChat) loadMessages(selectedChat._id);\n  }, [selectedChat]);\n\n  // Scroll to bottom on new messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Typing indicator logic\n  useEffect(() => {\n    if (selectedChat && isTyping) {\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n        socketService.sendTyping(selectedChat._id, false);\n      }, 1000);\n    }\n    return () => {\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n    };\n  }, [isTyping, selectedChat]);\n\n  // --- SOCKET LISTENERS: Always active ---\n  useEffect(() => {\n    // Typing: only update if relevant chat is open\n    const handleTyping = (data: { chatId: string; isTyping: boolean; userId: string }) => {\n      if (selectedChat && data.chatId === selectedChat._id && data.userId !== currentUser?._id) {\n        setOtherUserTyping(data.isTyping);\n      }\n    };\n\n    // New message: always update unread count and show notification\n    const handleNewMessage = (message: Message) => {\n      // If the selected chat is open, add message to messages\n      console.log('New message received:', message);\n      if (selectedChat && message.chatId === selectedChat._id) {\n        setMessages(prev => [...prev, message]);\n      }\n      // Always update unread count for the relevant chat\n      setChats(prevChats =>\n        prevChats.map(chat =>\n          chat._id === message.chatId\n            ? { ...chat, unreadCount: (chat.unreadCount || 0) + 1, lastMessage: message }\n            : chat\n        )\n      );\n      // Show toast if the message is for a chat that's not currently open\n      if (!selectedChat || message.chatId !== selectedChat._id) {\n        window.dispatchEvent(\n          new CustomEvent('toast', {\n            detail: {\n              type: 'notification',\n              message: `New message from ${message.sender.firstName}: ${message.content}`,\n            },\n          })\n        );\n      }\n    };\n\n    socketService.on('userTyping', handleTyping);\n    socketService.on('newMessage', handleNewMessage);\n\n    return () => {\n      socketService.off('userTyping', handleTyping);\n      socketService.off('newMessage', handleNewMessage);\n    };\n  }, [selectedChat, currentUser]);\n\n  // --- Data Loaders ---\n  const loadChats = async () => {\n    try {\n      setLoading(true);\n      const response = await chatService.getUserChats();\n      const chatsData = response.data?.chats || response.data?.items || [];\n      setChats(chatsData);\n    } catch (error) {\n      console.error('Failed to load chats:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMessages = async (chatId: string) => {\n    try {\n      setLoading(true);\n      const response = await chatService.getChatMessages(chatId);\n      const messagesData = response.data?.messages || response.data?.items || [];\n      setMessages(messagesData);\n    } catch (error) {\n      console.error('Failed to load messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Input & Send ---\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewMessage(e.target.value);\n    if (!isTyping && e.target.value.trim()) {\n      setIsTyping(true);\n      if (selectedChat) socketService.sendTyping(selectedChat._id, true);\n    } else if (isTyping && !e.target.value.trim()) {\n      setIsTyping(false);\n      if (selectedChat) socketService.sendTyping(selectedChat._id, false);\n    }\n  };\n\n  const sendMessageHandler = async () => {\n    if (!newMessage.trim() || !selectedChat) return;\n    try {\n      socketService.sendMessage({\n        chatId: selectedChat._id,\n        content: newMessage.trim(),\n        replyTo: replyingTo?._id,\n      });\n      setNewMessage('');\n      setReplyingTo(null);\n      setIsTyping(false);\n      socketService.sendTyping(selectedChat._id, false);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      sendMessageHandler();\n    }\n  };\n\n  // --- Helpers ---\n  const formatTime = (date: Date | string) =>\n    new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n  const formatLastSeen = (date: Date | string) => {\n    const now = new Date();\n    const lastSeen = new Date(date);\n    const diffInMinutes = Math.floor((now.getTime() - lastSeen.getTime()) / (1000 * 60));\n    if (diffInMinutes < 1) return 'just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return lastSeen.toLocaleDateString();\n  };\n\n  const getParticipantName = (chat: Chat) => {\n    if (chat.type === 'group') return chat.groupName || 'Group Chat';\n    const other = chat.participants.find(p => p._id !== currentUser?._id);\n    return other ? `${other.firstName} ${other.lastName}` : 'Unknown';\n  };\n\n  const getParticipantAvatar = (chat: Chat) => {\n    if (chat.type === 'group') return chat.groupName?.charAt(0).toUpperCase() || 'G';\n    const other = chat.participants.find(p => p._id !== currentUser?._id);\n    return other\n      ? `${other.firstName.charAt(0)}${other.lastName.charAt(0)}`.toUpperCase()\n      : 'U';\n  };\n\n  const isParticipantOnline = (chat: Chat) => {\n    if (chat.type === 'group') return false;\n    const other = chat.participants.find(p => p._id !== currentUser?._id);\n    return other?.isOnline || false;\n  };\n\n  const getMessageStatus = (message: Message) => {\n    if (message.sender._id !== currentUser?._id) return null;\n    if (message.readBy && message.readBy.length > 0) {\n      return <CheckCheck className=\"w-3 h-3 text-blue-400\" />;\n    }\n    if (message.deliveredTo && message.deliveredTo.length > 0) {\n      return <CheckCheck className=\"w-3 h-3 text-gray-400\" />;\n    }\n    return <Check className=\"w-3 h-3 text-gray-400\" />;\n  };\n\n  const filteredChats = chats.filter(chat =>\n    getParticipantName(chat).toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // --- UI ---\n  if (!isAuthenticated) {\n    return (\n      <div className=\"fixed bottom-4 right-4 z-50\">\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={() => navigate('/signup')}\n          className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg\"\n        >\n          <MessageCircle size={24} />\n        </motion.button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <AnimatePresence>\n        {!isOpen && (\n          <motion.button\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            exit={{ scale: 0 }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => {\n              if (!isAuthenticated) {\n                navigate('/signup');\n              } else {\n                setIsOpen(true);\n              }\n            }}\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg relative\"\n          >\n            <MessageCircle size={24} />\n            {/* Badge for total unread messages */}\n            {chats.reduce((count, chat) => count + (chat.unreadCount || 0), 0) > 0 && (\n              <div className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center\">\n                {chats.reduce((count, chat) => count + (chat.unreadCount || 0), 0) > 99\n                  ? '99+'\n                  : chats.reduce((count, chat) => count + (chat.unreadCount || 0), 0)}\n              </div>\n            )}\n          </motion.button>\n        )}\n      </AnimatePresence>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.8, y: 20 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-2xl w-96 h-[600px] flex flex-col overflow-hidden border border-gray-200 dark:border-gray-700\"\n          >\n            {/* Header */}\n            <div className=\"bg-green-600 dark:bg-green-700 text-white p-4 flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                {selectedChat && (\n                  <button\n                    onClick={() => setSelectedChat(null)}\n                    className=\"p-1 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                  >\n                    <ArrowLeft size={20} />\n                  </button>\n                )}\n                <div>\n                  <h3 className=\"font-semibold\">\n                    {selectedChat ? getParticipantName(selectedChat) : 'WhatsApp'}\n                  </h3>\n                  {selectedChat && (\n                    <p className=\"text-xs text-green-100\">\n                      {isParticipantOnline(selectedChat) ? 'online' :\n                        selectedChat.participants.find(p => p._id !== currentUser?._id)?.lastSeen ?\n                          `last seen ${formatLastSeen(selectedChat.participants.find(p => p._id !== currentUser?._id)!.lastSeen!)}` :\n                          'offline'}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {selectedChat && (\n                  <>\n                    <button\n                      onClick={() => {/* handle audio call */}}\n                      className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                      title=\"Audio Call\"\n                    >\n                      <Phone size={18} />\n                    </button>\n                    <button\n                      onClick={() => {/* handle video call */}}\n                      className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                      title=\"Video Call\"\n                    >\n                      <Video size={18} />\n                    </button>\n                  </>\n                )}\n                <button\n                  onClick={() => setIsOpen(false)}\n                  className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                  title=\"Close\"\n                >\n                  <X size={18} />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-hidden\">\n              {!selectedChat ? (\n                // Chat List\n                <div className=\"h-full flex flex-col\">\n                  {/* Search */}\n                  <div className=\"p-3 bg-gray-50 dark:bg-gray-900\">\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                      <input\n                        type=\"text\"\n                        placeholder=\"Search or start new chat\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"w-full pl-9 pr-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-green-500 dark:text-white\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Chat List */}\n                  <div className=\"flex-1 overflow-y-auto\">\n                    {loading ? (\n                      <div className=\"flex items-center justify-center h-full\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n                      </div>\n                    ) : filteredChats.length === 0 ? (\n                      <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n                        <div className=\"text-center\">\n                          <MessageCircle size={48} className=\"mx-auto mb-4 opacity-50\" />\n                          <p>No conversations yet</p>\n                          <p className=\"text-sm\">Tap the new chat button to start messaging</p>\n                        </div>\n                      </div>\n                    ) : (\n                      filteredChats.map((chat) => (\n                        <motion.div\n                          key={chat._id}\n                          whileHover={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}\n                          onClick={() => setSelectedChat(chat)}\n                          className=\"p-3 border-b border-gray-100 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"relative\">\n                              <div className=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center text-gray-700 dark:text-gray-300 font-semibold\">\n                                {getParticipantAvatar(chat)}\n                              </div>\n                              {isParticipantOnline(chat) && (\n                                <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-800\"></div>\n                              )}\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                                  {getParticipantName(chat)}\n                                </p>\n                                {chat.lastMessage && (\n                                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                    {formatTime(chat.lastMessage.createdAt)}\n                                  </p>\n                                )}\n                              </div>\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n                                  {chat.lastMessage?.content || 'Tap to start messaging'}\n                                </p>\n                                {chat.unreadCount > 0 && (\n                                  <div className=\"bg-green-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center ml-2\">\n                                    {chat.unreadCount > 99 ? '99+' : chat.unreadCount}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </motion.div>\n                      ))\n                    )}\n                  </div>\n                </div>\n              ) : (\n                // Messages View\n                <div className=\"h-full flex flex-col\">\n                  {/* Messages */}\n                  <div\n                    className=\"flex-1 overflow-y-auto p-4 space-y-2 chat-messages\"\n                    style={{\n                      backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23e5ddd5' fill-opacity='0.4'%3E%3Ccircle cx='30' cy='30' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n                      backgroundColor: '#e5ddd5'\n                    }}\n                    data-messages-container\n                  >\n                    {messages.map((message) => {\n                      const isOwn = message.sender._id === currentUser?._id;\n                      return (\n                        <motion.div\n                          key={message._id}\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className={`flex ${isOwn ? 'justify-end' : 'justify-start'} group`}\n                        >\n                          <div className={`max-w-xs px-3 py-2 rounded-lg shadow-sm relative ${isOwn\n                              ? 'bg-green-500 text-white'\n                              : 'bg-white text-gray-900'\n                            }`}\n                            style={{\n                              borderRadius: isOwn ? '7.5px 7.5px 7.5px 0px' : '7.5px 7.5px 0px 7.5px'\n                            }}>\n                            {message.replyTo && (\n                              <div className={`mb-2 p-2 rounded border-l-4 text-xs ${isOwn\n                                  ? 'bg-green-600 border-green-300'\n                                  : 'bg-gray-100 border-gray-400'\n                                }`}>\n                                <p className=\"font-medium opacity-80\">{message.replyTo.sender.firstName}</p>\n                                <p className=\"truncate opacity-70\">{message.replyTo.content}</p>\n                              </div>\n                            )}\n\n                            {message.content && (\n                              <p className=\"text-sm leading-relaxed\">{message.content}</p>\n                            )}\n\n                            {message.media && message.media.length > 0 && (\n                              <div className=\"mt-2 space-y-2\">\n                                {message.media.map((file) => (\n                                  <div key={file._id}>\n                                    {file.mimetype.startsWith('image/') ? (\n                                      <img\n                                        src={file.url}\n                                        alt={file.originalName}\n                                        className=\"max-w-full h-auto rounded\"\n                                      />\n                                    ) : (\n                                      <a\n                                        href={file.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"flex items-center space-x-2 text-xs underline\"\n                                      >\n                                        <Paperclip size={12} />\n                                        <span>{file.originalName}</span>\n                                      </a>\n                                    )}\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n\n                            <div className=\"flex items-center justify-end mt-1 space-x-1\">\n                              <span className={`text-xs ${isOwn ? 'text-green-100' : 'text-gray-500'}`}>\n                                {formatTime(message.createdAt)}\n                              </span>\n                              {isOwn && (\n                                <div className=\"text-green-100\">\n                                  {getMessageStatus(message)}\n                                </div>\n                              )}\n                            </div>\n\n                            {!isOwn && (\n                              <button\n                                onClick={() => setReplyingTo(message)}\n                                className=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 p-1 bg-gray-200 hover:bg-gray-300 rounded transition-opacity\"\n                              >\n                                <Reply size={12} />\n                              </button>\n                            )}\n                          </div>\n                        </motion.div>\n                      );\n                    })}\n\n                    {/* Typing Indicator for other user */}\n                    {otherUserTyping && (\n                      <div className=\"flex justify-start\">\n                        <div className=\"bg-white rounded-lg px-4 py-2 shadow-sm\">\n                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    <div ref={messagesEndRef} />\n                  </div>\n\n                  {/* Reply Preview */}\n                  {replyingTo && (\n                    <div className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 border-l-4 border-green-500\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-xs font-medium text-green-600 dark:text-green-400\">\n                            Replying to {replyingTo.sender.firstName}\n                          </p>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300 truncate\">\n                            {replyingTo.content}\n                          </p>\n                        </div>\n                        <button\n                          onClick={() => setReplyingTo(null)}\n                          className=\"text-gray-400 hover:text-gray-600\"\n                        >\n                          <X size={16} />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Message Input */}\n                  <div className=\"p-3 bg-gray-50 dark:bg-gray-900\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n                        <Paperclip size={20} />\n                      </button>\n\n                      <div className=\"flex-1 relative\">\n                        <input\n                          type=\"text\"\n                          value={newMessage}\n                          onChange={handleInputChange}\n                          onKeyPress={handleKeyPress}\n                          placeholder=\"Type a message\"\n                          className=\"w-full px-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500 dark:text-white\"\n                        />\n                      </div>\n\n                      <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n                        <Smile size={20} />\n                      </button>\n\n                      <button\n                        onClick={sendMessageHandler}\n                        disabled={!newMessage.trim()}\n                        className=\"p-2 bg-green-500 text-white rounded-full hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <Send size={18} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default ChatWidget;","import React, { useState, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { UserCircle, Settings, LogOut, User, Bell, Mail, ExternalLink } from 'lucide-react';\n\ninterface UserMenuProps {\n  user: { firstName?: string; lastName?: string; email?: string; role?: string } | null;\n  onLogout: () => void;\n  notificationsCount?: number;\n  messagesCount?: number;\n  isAdmin?: boolean;\n}\n\nconst UserMenu: React.FC<UserMenuProps> = ({\n  user,\n  onLogout,\n  notificationsCount = 0,\n  messagesCount = 0,\n  isAdmin = false,\n}) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const navigate = useNavigate();\n\n  // Close dropdown when clicking outside\n  React.useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    }\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [dropdownOpen]);\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      {/* Notification Icon */}\n      <Link to={isAdmin ? \"/admin/notifications\" : \"/notifications\"} className=\"relative flex items-center text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400\">\n        <Bell className=\"w-6 h-6\" />\n        {notificationsCount > 0 && (\n          <span className=\"absolute -top-1 -right-2 bg-blue-500 text-white text-xs rounded-full px-1.5 py-0.5\">{notificationsCount}</span>\n        )}\n      </Link>\n      {/* Mail Icon */}\n      <Link to={isAdmin ? \"/admin/messages\" : \"/messages\"} className=\"relative flex items-center text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400\">\n        <Mail className=\"w-6 h-6\" />\n        {messagesCount > 0 && (\n          <span className=\"absolute -top-1 -right-2 bg-red-500 text-white text-xs rounded-full px-1.5 py-0.5\">{messagesCount}</span>\n        )}\n      </Link>\n      {/* User name (desktop only) */}\n      <span\n        className=\"text-sm text-gray-700 dark:text-gray-300 font-medium hidden sm:inline cursor-pointer\"\n        onClick={() => navigate(isAdmin ? '/admin/profile' : '/profile')}\n      >\n        {user?.firstName} {user?.lastName}\n      </span>\n      {/* User avatar dropdown */}\n      <div className=\"relative\" ref={dropdownRef}>\n        <button\n          onClick={() => setDropdownOpen((open) => !open)}\n          className=\"flex items-center focus:outline-none\"\n          aria-label=\"User menu\"\n        >\n          <UserCircle className=\"w-9 h-9 text-gray-400 dark:text-gray-300\" />\n        </button>\n        {dropdownOpen && (\n          <div className=\"absolute right-0 mt-2 w-56 bg-white dark:bg-gray-800 rounded-md shadow-lg z-50 py-1\">\n            {/* Username on mobile */}\n            <button\n              className=\"block w-full text-left px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center sm:hidden\"\n              onClick={() => {\n                setDropdownOpen(false);\n                navigate(isAdmin ? '/admin/profile' : '/profile');\n              }}\n            >\n              <UserCircle className=\"w-4 h-4 mr-2\" />\n              {user?.firstName} {user?.lastName}\n            </button>\n            <Link\n              to={isAdmin ? \"/admin/profile\" : \"/profile\"}\n              className=\"block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n            >\n              <User className=\"w-4 h-4 mr-2\" /> Profile\n            </Link>\n            <Link\n              to={isAdmin ? \"/admin/settings\" : \"/settings\"}\n              className=\"block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n            >\n              <Settings className=\"w-4 h-4 mr-2\" /> Settings\n            </Link>\n            {isAdmin && (\n              <Link\n                to=\"/\"\n                className=\"block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n              >\n                <ExternalLink className=\"w-4 h-4 mr-2\" />\n                View Portfolio\n              </Link>\n            )}\n            <button\n              onClick={onLogout}\n              className=\"w-full text-left px-4 py-2 text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center\"\n            >\n              <LogOut className=\"w-4 h-4 mr-2\" /> Logout\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserMenu;","import React, { useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../app/providers/AuthContext';\nimport { useTheme } from '../../app/providers/ThemeContext';\nimport {\n  Home,\n  User as UserIcon,\n  Award,\n  FileText,\n  Folder,\n  MessageCircle,\n  BadgeCheck,\n  Mail,\n  LogIn,\n  Shield,\n} from 'lucide-react';\nimport UserMenu from './UserMenu';\n\nconst Navbar: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { isAuthenticated, user, logout } = useAuth();\n  const { theme, toggleTheme, isLoading } = useTheme();\n\n  const navItems = [\n    { name: 'Home', path: '/', icon: <Home className=\"w-4 h-4 mr-1\" /> },\n    { name: 'About', path: '/about', icon: <UserIcon className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Skills', path: '/skills', icon: <Award className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Resume', path: '/resume', icon: <FileText className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Projects', path: '/projects', icon: <Folder className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Testimonials', path: '/testimonials', icon: <MessageCircle className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Certificates', path: '/certificates', icon: <BadgeCheck className=\"w-4 h-4 mr-1\" /> },\n    { name: 'Contact', path: '/contact', icon: <Mail className=\"w-4 h-4 mr-1\" /> },\n  ];\n\n  const isActive = (path: string) => location.pathname === path;\n\n  // Add your logout logic here\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  return (\n    <nav className={`bg-white dark:bg-gray-900 shadow-lg fixed w-full z-50 transition-colors duration-200 ${isLoading ? 'opacity-0' : 'opacity-100'}`}>\n      <div className=\"mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16 w-full\">\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center flex-1 min-w-0\">\n            {/* Left: User/Site Name and Theme Toggle */}\n            <div className=\"flex items-center flex-shrink-0\">\n              <Link to=\"/\" className=\"flex-shrink-0\">\n                <span className=\"text-2xl font-bold gradient-text\">Amol Deole</span>\n              </Link>\n              <button\n                onClick={toggleTheme}\n                disabled={isLoading}\n                className=\"ml-3 p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors disabled:opacity-50\"\n                title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              >\n                {theme === 'dark' ? '☀️' : '🌙'}\n              </button>\n            </div>\n            {/* Nav links */}\n            <div className=\"flex items-center space-x-4 flex-1 min-w-0 justify-end\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  className={`px-3 py-2 rounded-md text-sm font-medium flex items-center transition-colors ${isActive(item.path)\n                      ? 'text-blue-600 dark:text-blue-400'\n                      : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'\n                    }`}\n                >\n                  {item.icon}\n                  {item.name}\n                </Link>\n              ))}\n\n              {/* Admin Panel only for admin */}\n              {isAuthenticated && user?.role === 'admin' && (\n                <Link\n                  to=\"/admin\"\n                  className=\"dark:text-gray-300 border-2 p-2 py-1 rounded-full hover:bg-primary-900 hover:text-white transition-all duration-300 flex items-center gap-2\"\n                >\n                  <Shield className=\"w-4 h-4 mr-1\" />\n                  Admin Panel\n                </Link>\n              )}\n\n              {/* UserMenu for authenticated users, Login for guests */}\n              {isAuthenticated ? (\n                <UserMenu user={user} onLogout={handleLogout} />\n              ) : (\n                <Link\n                  to=\"/login\"\n                  className=\"border-2 border-primary-600 text-primary-600 dark:text-primary-400 dark:border-primary-400 px-6 py-2 rounded-full font-semibold hover:bg-primary-600 hover:text-white dark:hover:bg-primary-400 dark:hover:text-gray-900 transition-all duration-300 flex items-center gap-2 text-sm\"\n                >\n                  <LogIn className=\"w-4 h-4 mr-1\" />\n                  Login\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden flex items-center\">\n            <button\n              onClick={toggleTheme}\n              disabled={isLoading}\n              className=\"p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 mr-2 transition-colors disabled:opacity-50\"\n            >\n              {theme === 'dark' ? '☀️' : '🌙'}\n            </button>\n            <button\n              onClick={() => setIsOpen(!isOpen)}\n              className=\"p-2 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n            >\n              <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                {isOpen ? (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                ) : (\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                )}\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {isOpen && (\n          <div className=\"md:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.path}\n                  className={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${isActive(item.path)\n                      ? 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20'\n                      : 'text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400'\n                    }`}\n                  onClick={() => setIsOpen(false)}\n                >\n                  <span className=\"flex items-center\">\n                    {item.icon}\n                    {item.name}\n                  </span>\n                </Link>\n              ))}\n              {/* Admin Panel only for admin */}\n              {isAuthenticated && user?.role === 'admin' && (\n                <Link\n                  to=\"/admin\"\n                  className=\"block px-3 py-2 rounded-md text-base font-medium bg-blue-600 text-white hover:bg-blue-700 transition-colors\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  Admin Panel\n                </Link>\n              )}\n              {/* UserMenu for authenticated users, Login for guests */}\n              {isAuthenticated ? (\n                <UserMenu user={user} onLogout={handleLogout} />\n              ) : (\n                <Link\n                  to=\"/login\"\n                  className=\"block px-3 py-2 rounded-md text-base font-medium bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  Login\n                </Link>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Footer: React.FC = () => (\n  <footer className=\"bg-gray-900 dark:bg-black text-white py-4\">\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-4\">\n      <div className=\"text-center text-gray-400 text-sm flex flex-wrap justify-center items-center gap-2\">\n        <span>© {new Date().getFullYear()} Amol Deole. All rights reserved.</span>\n        <span className=\"hidden sm:inline\">|</span>\n        <span>Designed by Amol Deole · Built with React, TypeScript & Tailwind CSS</span>\n      </div>\n    </div>\n  </footer>\n);\n\nexport default Footer;","import { lazy } from 'react';\n\nexport const portfolioRoutes = [\n  {\n    path: '',\n    element: lazy(() => import('./pages/PortfolioHome')),\n  },\n  {\n    path: 'about',\n    element: lazy(() => import('./pages/About')),\n  },\n  {\n    path: 'certificates',\n    element: lazy(() => import('./pages/Certificates')),\n  },\n  {\n    path: 'contact',\n    element: lazy(() => import('./pages/Contact')),\n  },\n  {\n    path: 'experience',\n    element: lazy(() => import('./pages/Experience')),\n  },\n  {\n    path: 'projects',\n    element: lazy(() => import('./pages/Projects')),\n  },\n  {\n    path: 'resume',\n    element: lazy(() => import('./pages/Resume')),\n  },\n  {\n    path: 'skills',\n    element: lazy(() => import('./pages/Skills')),\n  },\n  {\n    path: 'technologies',\n    element: lazy(() => import('./pages/Technologies')),\n  },\n  {\n    path: 'testimonials',\n    element: lazy(() => import('./pages/Testimonials')),\n  },\n];\n","import React, { Suspense } from 'react';\nimport { Routes, Route, Outlet } from 'react-router-dom';\nimport Navbar from '../../shared/components/Navbar';\nimport Footer from '../../shared/components/Footer';\nimport { portfolioRoutes } from './portfolioRoutes';\nimport ChatWidget from '../chat/ChatWidget/ChatWidget';\n\nconst PortfolioLayout: React.FC = () => (\n  <div className=\"flex flex-col min-h-screen\">\n    <Navbar />\n    <main className=\"flex-1 flex flex-col\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          {portfolioRoutes.map(({ path, element: Element }) => (\n            <Route\n              key={path || 'index'}\n              path={path}\n              element={<Element />}\n            />\n          ))}\n          <Route index element={React.createElement(portfolioRoutes[0].element)} />\n        </Routes>\n      </Suspense>\n      <Outlet />\n    </main>\n    <Footer />\n    <ChatWidget /> {/* <-- Add this line */}\n  </div>\n);\n\nexport default PortfolioLayout;"],"names":["ChatWidget","_selectedChat$partici","isOpen","setIsOpen","useState","isAuthenticated","setIsAuthenticated","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","searchTerm","setSearchTerm","loading","setLoading","replyingTo","setReplyingTo","isTyping","setIsTyping","otherUserTyping","setOtherUserTyping","messagesEndRef","useRef","typingTimeoutRef","currentUser","authService","getUser","navigate","useNavigate","useEffect","loadChats","loadMessages","_id","_messagesEndRef$curre","current","scrollIntoView","behavior","clearTimeout","setTimeout","socketService","sendTyping","handleTyping","data","chatId","userId","handleNewMessage","message","console","log","prev","prevChats","map","chat","_objectSpread","unreadCount","lastMessage","window","dispatchEvent","CustomEvent","detail","type","concat","sender","firstName","content","on","off","async","_response$data","_response$data2","response","chatService","getUserChats","chatsData","items","error","_response$data3","_response$data4","getChatMessages","messagesData","sendMessageHandler","trim","sendMessage","replyTo","formatTime","date","Date","toLocaleTimeString","hour","minute","getParticipantName","groupName","other","participants","find","p","lastName","getParticipantAvatar","_chat$groupName","charAt","toUpperCase","isParticipantOnline","isOnline","getMessageStatus","readBy","length","_jsx","CheckCheck","className","deliveredTo","Check","filteredChats","filter","toLowerCase","includes","_jsxs","children","AnimatePresence","motion","button","initial","scale","animate","exit","whileHover","whileTap","onClick","MessageCircle","size","reduce","count","div","opacity","y","ArrowLeft","lastSeen","now","diffInMinutes","Math","floor","getTime","toLocaleDateString","formatLastSeen","_Fragment","title","Phone","Video","X","style","backgroundImage","backgroundColor","isOwn","borderRadius","media","file","mimetype","startsWith","src","url","alt","originalName","href","target","rel","Paperclip","createdAt","Reply","animationDelay","ref","value","onChange","e","onKeyPress","key","preventDefault","placeholder","Smile","disabled","Send","Search","_chat$lastMessage","_ref","user","onLogout","notificationsCount","messagesCount","isAdmin","dropdownOpen","setDropdownOpen","dropdownRef","React","handleClickOutside","event","contains","document","addEventListener","removeEventListener","Link","to","Bell","Mail","open","UserCircle","User","Settings","ExternalLink","LogOut","Navbar","location","useLocation","logout","useAuth","theme","toggleTheme","isLoading","useTheme","navItems","name","path","icon","Home","UserIcon","Award","FileText","Folder","BadgeCheck","isActive","pathname","handleLogout","item","role","Shield","UserMenu","LogIn","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Footer","getFullYear","portfolioRoutes","element","lazy","PortfolioLayout","Suspense","fallback","Routes","Element","Route","index","Outlet"],"sourceRoot":""}