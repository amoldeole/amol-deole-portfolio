{"version":3,"file":"static/js/648.58657759.chunk.js","mappings":"gVAoBA,MAmKA,EAnK2BA,KACzB,MAAM,MAAEC,EAAK,YAAEC,IAAgBC,EAAAA,EAAAA,MACxBC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAS,IAC1CK,EAAUC,IAAeN,EAAAA,EAAAA,WAAS,GAEnCO,EAMDC,IAAA,IAAC,KAAEC,EAAI,MAAEC,EAAK,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,GAASL,EAAA,OAC9CM,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,WAAY,CAAEC,gBAAiB,4BAC/BL,QAASA,EACTM,UAAU,6DAA4DC,UAEtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wHAAuHC,SACnIX,KAEHY,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,SAAEV,IACjEC,IACCG,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SAAET,OAG5DC,IAAUE,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAACC,KAAM,GAAIJ,UAAU,wBAK7CK,EAAqFC,IAAA,IAAC,QAAEC,EAAO,SAAEC,GAAUF,EAAA,OAC/GX,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAMc,GAAUD,GACzBP,UAAS,6EAAAS,OACPF,EAAU,cAAgB,gCACzBN,UAEHN,EAAAA,EAAAA,KAAA,QACEK,UAAS,6EAAAS,OACPF,EAAU,gBAAkB,sBAMpC,OACEL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAE7DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oDAAmDC,UAChEN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,sDAAqDC,SAAC,gBAItEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EAErCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gDAA+CC,UAC5DN,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACN,KAAM,KAClBb,MAAM,UACNC,SAAS,uCAKbU,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,kBAEvEN,EAAAA,EAAAA,KAACP,EAAW,CACVE,KAAgB,SAAVd,GAAmBmB,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACP,KAAM,MAAST,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACR,KAAM,KACzDb,MAAM,QACNC,SAAQ,mBAAAiB,OAAqBjC,EAAK,SAClCiB,QACEE,EAAAA,EAAAA,KAAA,UACED,QAASjB,EACTuB,UAAU,wEAAuEC,SAEtE,SAAVzB,EAAmB,QAAU,eAOtC0B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,qBAEvEN,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAACkB,EAAAA,EAAI,CAACT,KAAM,KAClBb,MAAM,qBACNC,SAAS,yCACTC,QAAQE,EAAAA,EAAAA,KAACU,EAAY,CAACE,QAAS5B,EAAe6B,SAAU5B,OAE1De,EAAAA,EAAAA,KAACP,EAAW,CACVE,KAAMR,GAASa,EAAAA,EAAAA,KAACmB,EAAAA,EAAO,CAACV,KAAM,MAAST,EAAAA,EAAAA,KAACoB,EAAAA,EAAO,CAACX,KAAM,KACtDb,MAAM,sBACNC,SAAS,gCACTC,QAAQE,EAAAA,EAAAA,KAACU,EAAY,CAACE,QAASzB,EAAQ0B,SAAUzB,UAKrDmB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,eAEvEN,EAAAA,EAAAA,KAACP,EAAW,CACVE,KAAMN,GAAeW,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACZ,KAAM,MAAST,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACb,KAAM,KACvDb,MAAM,gBACNC,SAAS,kDACTC,QAAQE,EAAAA,EAAAA,KAACU,EAAY,CAACE,QAASvB,EAAcwB,SAAUvB,OAEzDU,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACd,KAAM,KACnBb,MAAM,YACNC,SAAS,iCACTC,QAAQE,EAAAA,EAAAA,KAACU,EAAY,CAACE,QAASrB,EAAUsB,SAAUrB,OAErDQ,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAACf,KAAM,KACpBb,MAAM,mBACNC,SAAS,6BAKbU,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,YAEvEN,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAAChB,KAAM,KACxBb,MAAM,cACNC,SAAS,mCAEXG,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAAC0B,EAAAA,EAAO,CAACjB,KAAM,KACrBb,MAAM,iBACNC,SAAS,uCAKbU,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,eAEvEN,EAAAA,EAAAA,KAACP,EAAW,CACVE,MAAMK,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAAClB,KAAM,KACxBb,MAAM,iBACNC,SAAS,0C,2ICnJrB,MAuMA,EAvMyB+B,KACvB,MAAOC,EAAUC,IAAe5C,EAAAA,EAAAA,UAAuB,KAChD6C,EAAYC,IAAiB9C,EAAAA,EAAAA,UAAuB,KACpD+C,EAASC,IAAchD,EAAAA,EAAAA,WAAS,IAEvCiD,EAAAA,EAAAA,YAAU,KAERC,YAAW,KACTJ,EAAc,CACZ,CACEK,GAAI,IACJC,KAAM,CACJD,GAAI,KACJE,KAAM,YACNC,OAAQ,MAEVC,QAAS,CACPC,KAAM,OACNC,KAAM,6CACNvC,gBAAiB,WAEnBwC,UAAW,IAAIC,KAAKA,KAAKC,MAAQ,MACjCC,MAAO,EACPC,UAAU,KAIdlB,EAAY,CACV,CACEO,GAAI,IACJC,KAAM,CACJD,GAAI,IACJE,KAAM,WACNC,OAAQ,MAEVC,QAAS,CACPC,KAAM,OACNC,KAAM,uCACNvC,gBAAiB,WAEnBwC,UAAW,IAAIC,KAAKA,KAAKC,MAAQ,MACjCC,MAAO,GACPC,UAAU,GAEZ,CACEX,GAAI,IACJC,KAAM,CACJD,GAAI,IACJE,KAAM,aACNC,OAAQ,MAEVC,QAAS,CACPC,KAAM,OACNC,KAAM,sBACNvC,gBAAiB,WAEnBwC,UAAW,IAAIC,KAAKA,KAAKC,MAAQ,OACjCC,MAAO,EACPC,UAAU,KAGdd,GAAW,KACV,OACF,IAEH,MAAMe,EAAcC,IAClB,MAAMJ,EAAM,IAAID,KACVM,EAAcC,KAAKC,OAAOP,EAAIQ,UAAYJ,EAAKI,WAAS,MAE9D,OAAIH,EAAc,EAAU,WACxBA,EAAc,GAAU,GAANrC,OAAUqC,EAAW,SACpCD,EAAKK,sBAGRC,EAAgE9D,IAAA,IAAC,OAAE+D,EAAM,MAAEC,GAAQ,GAAOhE,EAAA,OAC9FM,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,WAAY,CAAEC,gBAAiB,4BAC/BC,UAAU,6DAA4DC,UAEtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAA,OAAKK,UAAS,6FAAAS,OACZ2C,EAAOT,SAAW,kBAAoB,oBACpCW,MAAO,CAAEvD,gBAAiBqD,EAAOhB,QAAQrC,iBAAmB,WAAYE,SACzEmD,EAAOnB,KAAKE,SAEdkB,IACC1D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8FAA6FC,UAC1GN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAI,CAACnD,KAAM,GAAIJ,UAAU,qBAIhCE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6DAA4DC,SACtEmD,EAAOnB,KAAKC,QAEfhC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SACpD2C,EAAWQ,EAAOb,aAEpBc,IACC1D,EAAAA,EAAAA,KAAA,UAAQK,UAAU,gDAA+CC,UAC/DN,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,CAACpD,KAAM,cAK5BT,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,SACrC,SAAxBmD,EAAOhB,QAAQC,KAAkBe,EAAOhB,QAAQE,KAAI,GAAA7B,OAAM2C,EAAOhB,QAAQC,KAAI,aAE/EgB,IACCnD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCN,EAAAA,EAAAA,KAACqB,EAAAA,EAAG,CAACZ,KAAM,GAAIJ,UAAU,wBACzBE,EAAAA,EAAAA,MAAA,QAAMF,UAAU,wBAAuBC,SAAA,CAAEmD,EAAOV,MAAM,wBAQlE,OACExC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAE7DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oDAAmDC,UAChEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,sDAAqDC,SAAC,YACpEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wIAAuIC,UACvJN,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,CAACrD,KAAM,QAEhBT,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wIAAuIC,UACvJN,EAAAA,EAAAA,KAAC+D,EAAAA,EAAI,CAACtD,KAAM,gBAOpBT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACpC2B,GACCjC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oEAGjBE,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAA1D,SAAA,EAEEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,gBAEtEyB,EAAWkC,OAAS,EACnBlC,EAAWmC,KAAKT,IACdzD,EAAAA,EAAAA,KAACwD,EAAU,CAAiBC,OAAQA,EAAQC,OAAO,GAAlCD,EAAOpB,OAG1BrC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uFAAsFC,UACnGN,EAAAA,EAAAA,KAAC4D,EAAAA,EAAI,CAACnD,KAAM,GAAIJ,UAAU,qBAE5BE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,SAAC,eACjEN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SAAC,wCAQjEuB,EAASoC,OAAS,IACjB1D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,uDAAsDC,SAAC,qBAEtEuB,EAASqC,KAAKT,IACbzD,EAAAA,EAAAA,KAACwD,EAAU,CAAiBC,OAAQA,GAAnBA,EAAOpB,SAKT,IAApBR,EAASoC,QAAsC,IAAtBlC,EAAWkC,SAAiBhC,IACpDjC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2EAA0EC,UACvFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAACmE,EAAAA,EAAK,CAAC1D,KAAM,GAAIJ,UAAU,6BAC3BL,EAAAA,EAAAA,KAAA,KAAGK,UAAU,cAAaC,SAAC,uBAC3BN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,UAASC,SAAC,4E,0PC9LzC,MAAM8D,EAAqBA,KACzB,MAAM,MAAEC,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,MACvBC,EAAYC,IAAiBvF,EAAAA,EAAAA,UAAS,IACvCwF,EAAcC,EAAAA,EAAYC,UAE1BC,EAAsBC,IAC1B,GAAkB,UAAdA,EAAKpC,KACP,OAAOoC,EAAKC,WAAa,aAG3B,MAAMC,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAOJ,EAAgB,GAAAlE,OAAMkE,EAAiBK,UAAS,KAAAvE,OAAIkE,EAAiBM,UAAa,WAGrFC,EAAwBT,IACA,IAADU,EAA3B,GAAkB,UAAdV,EAAKpC,KACP,OAAqB,QAAd8C,EAAAV,EAAKC,iBAAS,IAAAS,OAAA,EAAdA,EAAgBC,OAAO,GAAGC,gBAAiB,IAGpD,MAAMV,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAOJ,EACL,GAAAlE,OAAGkE,EAAiBK,UAAUI,OAAO,IAAE3E,OAAGkE,EAAiBM,SAASG,OAAO,IAAKC,cAChF,KAGEC,EAAuBb,IAC3B,GAAkB,UAAdA,EAAKpC,KAAkB,OAAO,EAElC,MAAMsC,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAuB,OAAhBJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBY,YAAY,GAGjC3C,EAAcC,IAClB,MAAM2C,EAAc,IAAIhD,KAAKK,GACvBJ,EAAM,IAAID,KACViD,EAAa1C,KAAKC,OAAOP,EAAIQ,UAAYuC,EAAYvC,WAAS,OAEpE,OAAmB,IAAfwC,EACKD,EAAYE,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAC7C,IAAfH,EACF,YACEA,EAAa,EACfD,EAAYtC,mBAAmB,GAAI,CAAE2C,QAAS,UAE9CL,EAAYtC,mBAAmB,GAAI,CAAE4C,MAAO,QAASC,IAAK,aAI/DC,EAAgBhC,EAAMiC,MAAMC,QAAOzB,GACvCD,EAAmBC,GAAM0B,cAAcC,SAASjC,EAAWgC,iBAG7D,OACEjG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAE7DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,sDAAqDC,SAAC,WACpEN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8BAA6BC,UAC1CN,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wIAAuIC,UACvJN,EAAAA,EAAAA,KAAC0G,EAAAA,EAAQ,CAACjG,KAAM,aAMtBF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CAACtG,UAAU,mEAAmEI,KAAM,MAC3FT,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLkE,YAAY,2BACZC,MAAOrC,EACP3D,SAAWiG,GAAMrC,EAAcqC,EAAEC,OAAOF,OACxCxG,UAAU,uJAMhBL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACpC+D,EAAMpC,SACLjC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mEAEU,IAAzBgG,EAAcpC,QAChBjE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2EAA0EC,UACvFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,GAAIJ,UAAU,6BACnCL,EAAAA,EAAAA,KAAA,KAAGK,UAAU,cAAaC,SAAC,kBAC3BN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,UAASC,SAAC,gDAI3B+F,EAAcnC,KAAKY,IAAI,IAAAmC,EAAAC,EAAA,OACrBlH,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETC,WAAY,CAAEC,gBAAiB,4BAC/BL,QAASA,IAAMuE,EAAWQ,GAC1BzE,UAAS,4GAAAS,QACW,QAAlBmG,EAAA5C,EAAM8C,oBAAY,IAAAF,OAAA,EAAlBA,EAAoB7B,OAAQN,EAAKM,IAAM,iCAAmC,IACzE9E,UAEHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yIAAwIC,SACpJiF,EAAqBT,KAEvBa,EAAoBb,KACnB9E,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+GAGnBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6DAA4DC,SACtEuE,EAAmBC,KAErBA,EAAKsC,cACJpH,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SACpD2C,EAAW6B,EAAKsC,YAAYC,iBAInC9G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,UAC7C,QAAhB4G,EAAApC,EAAKsC,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBzE,UAAW,oBAE/BqC,EAAKwC,YAAc,IAClBtH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4FAA2FC,SACvGwE,EAAKwC,YAAc,GAAK,MAAQxC,EAAKwC,wBAjC3CxC,EAAKM,cAgDlBmC,EAAuBA,KAC3B,MAAM,MAAElD,EAAK,YAAEmD,IAAgBjD,EAAAA,EAAAA,MACxBkD,EAAYC,IAAiBxI,EAAAA,EAAAA,UAAS,IACvCwF,EAAcC,EAAAA,EAAYC,UAEhC,IAAKP,EAAM8C,aACT,OACEnH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sEAAqEC,UAClFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,GAAIJ,UAAU,6BACnCL,EAAAA,EAAAA,KAAA,MAAIK,UAAU,2BAA0BC,SAAC,qBACzCN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,+DACHN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,eAAcC,SAAC,uDAMpC,MAgBMqH,EAAoBC,UACxB,GAAKH,EAAWI,QAAWxD,EAAM8C,aAEjC,UACQK,EAAYnD,EAAM8C,aAAa/B,IAAKqC,EAAWI,QACrDH,EAAc,GAChB,CAAE,MAAOI,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAOF,OACEvH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAE7DN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gFAA+EC,UAC5FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iIAAgIC,SAChH,UAA5B+D,EAAM8C,aAAazE,MACf2B,EAAM8C,aAAapC,WAAa,KAAKU,OAAO,GAAGC,cAChD,OAGNnF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,8CAA6CC,SA5C3CwE,KAC1B,GAAkB,UAAdA,EAAKpC,KACP,OAAOoC,EAAKC,WAAa,aAG3B,MAAMC,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAOJ,EAAgB,GAAAlE,OAAMkE,EAAiBK,UAAS,KAAAvE,OAAIkE,EAAiBM,UAAa,WAuC5ET,CAAmBR,EAAM8C,iBAE5BnH,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SAtCtCwE,KAC3B,GAAkB,UAAdA,EAAKpC,KAAkB,OAAO,EAElC,MAAMsC,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAuB,OAAhBJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBY,YAAY,GAmCxBD,CAAoBtB,EAAM8C,cAAgB,SAAW,8BAI5D5G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wIAAuIC,UACvJN,EAAAA,EAAAA,KAACgI,EAAAA,EAAK,CAACvH,KAAM,QAEfT,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wIAAuIC,UACvJN,EAAAA,EAAAA,KAACiI,EAAAA,EAAK,CAACxH,KAAM,gBAOrBT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mFAAkFC,SAC9F+D,EAAM6D,SAAShE,KAAKiE,IACnB,MAAMzE,EAAQyE,EAAQC,OAAOhD,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,KAClD,OACEpF,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETmI,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BlI,UAAS,QAAAS,OAAU4C,EAAQ,cAAgB,iBAAkBpD,UAE7DC,EAAAA,EAAAA,MAAA,OAAKF,UAAS,uDAAAS,OACZ4C,EACI,uCACA,yEACHpD,SAAA,CACA6H,EAAQM,UACPlI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yBAAwBC,SAAE6H,EAAQM,QAAQL,OAAO/C,aAC9DrF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,sBAAqBC,SAAE6H,EAAQM,QAAQhG,cAIxDzC,EAAAA,EAAAA,KAAA,KAAGK,UAAU,UAASC,SAAE6H,EAAQ1F,WAEhClC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DN,EAAAA,EAAAA,KAAA,QAAMK,UAAU,qBAAoBC,UA9DhC4C,EA+DUiF,EAAQd,UA9D7B,IAAIxE,KAAKK,GAAM6C,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,eAgEzDvC,IACC1D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBC,SAAC,wBAxBrC6H,EAAQ/C,KA1CLlC,YA8EhBlD,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8EAA6EC,UAC1FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLmE,MAAOY,EACP5G,SAAWiG,GAAMY,EAAcZ,EAAEC,OAAOF,OACxC6B,WAAa5B,GAAgB,UAAVA,EAAE6B,KAAmBhB,IACxCf,YAAY,oBACZvG,UAAU,oKAEZL,EAAAA,EAAAA,KAAA,UACED,QAAS4H,EACTiB,UAAWnB,EAAWI,OACtBxH,UAAU,4GAA2GC,UAErHN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAACpI,KAAM,gBA+ExB,EAvEuBqI,KACrB,MAAOC,EAAWC,IAAgB9J,EAAAA,EAAAA,UAAoB,SAEhD+J,EAAO,CACX,CAAE5G,GAAI,QAAsB6G,MAAO,QAASvJ,KAAMqH,EAAAA,GAClD,CAAE3E,GAAI,WAAyB6G,MAAO,WAAYvJ,KAAMwJ,EAAAA,GACxD,CAAE9G,GAAI,SAAuB6G,MAAO,SAAUvJ,KAAMwE,EAAAA,GACpD,CAAE9B,GAAI,WAAyB6G,MAAO,WAAYvJ,KAAMyJ,EAAAA,IAyB1D,OACEpJ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,4CAA2CC,UACxDN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAE5BN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+GAA8GC,SAC1H2I,EAAK/E,KAAKmF,IACT,MAAMC,EAAOD,EAAI1J,KACjB,OACEK,EAAAA,EAAAA,KAAA,UAEED,QAASA,IAAMiJ,EAAaK,EAAIhH,IAChChC,UAAS,yCAAAS,OACPiI,IAAcM,EAAIhH,GACd,yBACA,6EAENzC,MAAOyJ,EAAIH,MAAM5I,UAEjBN,EAAAA,EAAAA,KAACsJ,EAAI,CAAC7I,KAAM,MATP4I,EAAIhH,UAgBjBrC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mCAAkCC,UAC/CC,EAAAA,EAAAA,MAACgJ,EAAAA,GAAM,CAAAjJ,SAAA,EACLN,EAAAA,EAAAA,KAACwJ,EAAAA,GAAK,CAACC,KAAK,gBAAgBC,SAAS1J,EAAAA,EAAAA,KAAC2J,EAAAA,QAAW,OACjD3J,EAAAA,EAAAA,KAACwJ,EAAAA,GAAK,CAACC,KAAK,gBAAgBC,SAAS1J,EAAAA,EAAAA,KAAC4J,EAAAA,QAAW,OACjD5J,EAAAA,EAAAA,KAACwJ,EAAAA,GAAK,CAACC,KAAK,IAAIC,QApDNG,MACpB,OAAQd,GACN,IAAK,QACH,OACExI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sDAAqDC,UAClEN,EAAAA,EAAAA,KAACoE,EAAQ,OAEXpE,EAAAA,EAAAA,KAACuH,EAAU,OAGjB,IAAK,WACH,OAAOvH,EAAAA,EAAAA,KAAC8J,EAAAA,QAAQ,IAClB,IAAK,SACH,OAAO9J,EAAAA,EAAAA,KAAC4B,EAAAA,QAAM,IAChB,IAAK,WACH,OAAO5B,EAAAA,EAAAA,KAACpB,EAAAA,QAAQ,IAClB,QACE,OAAOoB,EAAAA,EAAAA,KAACoE,EAAQ,MAkCeyF,iB,yPCnWvC,MAsfA,EAtf6BE,KAAO,IAADC,EACjC,MAAM,MAAE3F,EAAK,UAAE4F,EAAS,WAAE3F,EAAU,YAAEkD,EAAW,WAAE0C,IAAe3F,EAAAA,EAAAA,MAC3D4C,EAAcgD,IAAmBjL,EAAAA,EAAAA,UAAsB,OACxD,aAAEkL,IAAiBC,EAAAA,EAAAA,MAClBC,EAAQC,IAAarL,EAAAA,EAAAA,WAAS,IAC9BuI,EAAYC,IAAiBxI,EAAAA,EAAAA,UAAS,KACtCsF,EAAYC,IAAiBvF,EAAAA,EAAAA,UAAS,KACtCsL,EAAYC,IAAiBvL,EAAAA,EAAAA,UAAyB,OACtDwL,EAAUC,IAAezL,EAAAA,EAAAA,WAAS,GACnC0L,GAAiBC,EAAAA,EAAAA,QAAuB,MACxCC,GAAmBD,EAAAA,EAAAA,WAEzB1I,EAAAA,EAAAA,YAAU,KACJmI,GAAU3F,EAAAA,EAAYoG,mBACxBd,MAED,CAACK,EAAQL,KAEZ9H,EAAAA,EAAAA,YAAU,KACR6I,MACC,CAAC3G,EAAM6D,YAEV/F,EAAAA,EAAAA,YAAU,KACJkC,EAAM8C,cAAgBuD,IACxBR,EAAW7F,EAAM8C,aAAa/B,KAAK,GAE/B0F,EAAiBG,SACnBC,aAAaJ,EAAiBG,SAGhCH,EAAiBG,QAAU7I,YAAW,KACpCuI,GAAY,GACZT,EAAW7F,EAAM8C,aAAc/B,KAAK,KACnC,MAGE,KACD0F,EAAiBG,SACnBC,aAAaJ,EAAiBG,YAGjC,CAACP,EAAUrG,EAAM8C,aAAc+C,IAElC,MAAMc,EAAiBA,KAAO,IAADG,EACL,QAAtBA,EAAAP,EAAeK,eAAO,IAAAE,GAAtBA,EAAwBC,eAAe,CAAEC,SAAU,YAG/C1D,EAAoBC,UACxB,GAAKH,EAAWI,QAAWxD,EAAM8C,aAEjC,UACQK,EACJnD,EAAM8C,aAAa/B,IACnBqC,EAAWI,YACXyD,EACU,OAAVd,QAAU,IAAVA,OAAU,EAAVA,EAAYpF,KAEdsC,EAAc,IACd+C,EAAc,MACdE,GAAY,GAERG,EAAiBG,UACnBC,aAAaJ,EAAiBG,SAC9Bf,EAAW7F,EAAM8C,aAAa/B,KAAK,GAEvC,CAAE,MAAO0C,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAoCI7E,EAAcC,GACX,IAAIL,KAAKK,GAAM6C,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAcpEpB,EAAsBC,IAC1B,GAAkB,UAAdA,EAAKpC,KACP,OAAOoC,EAAKC,WAAa,aAG3B,MAAML,EAAcC,EAAAA,EAAYC,UAC1BI,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAOJ,EAAgB,GAAAlE,OAAMkE,EAAiBK,UAAS,KAAAvE,OAAIkE,EAAiBM,UAAa,WAGrFC,EAAwBT,IACA,IAADU,EAA3B,GAAkB,UAAdV,EAAKpC,KACP,OAAqB,QAAd8C,EAAAV,EAAKC,iBAAS,IAAAS,OAAA,EAAdA,EAAgBC,OAAO,GAAGC,gBAAiB,IAGpD,MAAMhB,EAAcC,EAAAA,EAAYC,UAC1BI,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAOJ,EACL,GAAAlE,OAAGkE,EAAiBK,UAAUI,OAAO,IAAE3E,OAAGkE,EAAiBM,SAASG,OAAO,IAAKC,cAChF,KAGEC,EAAuBb,IAC3B,GAAkB,UAAdA,EAAKpC,KAAkB,OAAO,EAElC,MAAMgC,EAAcC,EAAAA,EAAYC,UAC1BI,EAAmBF,EAAKG,aAAaC,MAAMC,GAAYA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACpF,OAAuB,OAAhBJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBY,YAAY,GAGjC2F,EAAoBpD,IACxB,MAAMzD,EAAcC,EAAAA,EAAYC,UAChC,OAAIuD,EAAQC,OAAOhD,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,KAAY,KAEhD+C,EAAQqD,QAAUrD,EAAQqD,OAAOvH,OAAS,GACrCjE,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAACpL,UAAU,0BAE3B8H,EAAQuD,aAAevD,EAAQuD,YAAYzH,OAAS,GAC/CjE,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAACpL,UAAU,2BAExBL,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CAACtL,UAAU,2BAGpBgG,EAAgBhC,EAAMiC,MAAMC,QAAOzB,GACvCD,EAAmBC,GAAM0B,cAAcC,SAASjC,EAAWgC,iBAGvD9B,EAAcC,EAAAA,EAAYC,UAC1BgH,EAA2BvH,EAAM8C,cACrC9C,EAAMwH,YAAYC,IAAIzH,EAAM8C,aAAa/B,MAAa,GAExD,OAAKT,EAAAA,EAAYoG,mBAgBfxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAC+L,EAAAA,EAAe,CAAAzL,UACZgK,IACA/J,EAAAA,EAAAA,MAACN,EAAAA,EAAO+L,OAAM,CACZ3D,QAAS,CAAE4D,MAAO,GAClBzD,QAAS,CAAEyD,MAAO,GAClBC,KAAM,CAAED,MAAO,GACf9L,WAAY,CAAE8L,MAAO,KACrBE,SAAU,CAAEF,MAAO,IACnBlM,QAASA,IAAMwK,GAAU,GACzBlK,UAAU,iFAAgFC,SAAA,EAE1FN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,KACpB4D,EAAMiD,YAAc,IACnBtH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+GAA8GC,SAC1H+D,EAAMiD,YAAc,GAAK,MAAQjD,EAAMiD,oBAOlDtH,EAAAA,EAAAA,KAAC+L,EAAAA,EAAe,CAAAzL,SACbgK,IACC/J,EAAAA,EAAAA,MAACN,EAAAA,EAAOC,IAAG,CACTmI,QAAS,CAAEC,QAAS,EAAG2D,MAAO,GAAK1D,EAAG,IACtCC,QAAS,CAAEF,QAAS,EAAG2D,MAAO,EAAG1D,EAAG,GACpC2D,KAAM,CAAE5D,QAAS,EAAG2D,MAAO,GAAK1D,EAAG,IACnClI,UAAU,2IAA0IC,SAAA,EAGpJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kFAAiFC,SAAA,EAC9FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,CACzC+D,EAAM8C,eACLnH,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAMoK,EAAgB,MAC/B9J,UAAU,yDAAwDC,UAElEN,EAAAA,EAAAA,KAACoM,EAAAA,EAAS,CAAC3L,KAAM,QAGrBF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,gBAAeC,SAC1B+D,EAAM8C,aAAetC,EAAmBR,EAAM8C,cAAgB,aAEhE9C,EAAM8C,eACLnH,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yBAAwBC,SAClCqF,EAAoBtB,EAAM8C,cAAgB,SAC2B,QAArE6C,EAAA3F,EAAM8C,aAAalC,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,cAAI,IAAA4E,GAArEA,EAAuEzK,SAAQ,aAAAuB,OA9H5EoC,KACtB,MAAMJ,EAAM,IAAID,KACVtD,EAAW,IAAIsD,KAAKK,GACpBmJ,EAAgBjJ,KAAKC,OAAOP,EAAIQ,UAAY/D,EAAS+D,WAAS,KAEpE,OAAI+I,EAAgB,EAAU,WAC1BA,EAAgB,GAAU,GAANvL,OAAUuL,EAAa,SAC3CA,EAAgB,KAAY,GAANvL,OAAUsC,KAAKC,MAAMgJ,EAAgB,IAAG,SAC3D9M,EAASgE,sBAuHgB+I,CAAejI,EAAM8C,aAAalC,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OAAM7F,WACnG,mBAKTgB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,CACzC+D,EAAM8C,eACL5G,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAA1D,SAAA,EACEN,EAAAA,EAAAA,KAAA,UACED,QA7JIwM,KACtB,GAAIlI,EAAM8C,aAAc,CACtB,MAAMzC,EAAcC,EAAAA,EAAYC,UAC1B4H,EAAoBnI,EAAM8C,aAAalC,aAAasB,QAAOpB,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OAC7FgF,EAAaoC,EAAmB,QAASnI,EAAM8C,aAAa/B,IAC9D,GAyJkB/E,UAAU,yDACVT,MAAM,aAAYU,UAElBN,EAAAA,EAAAA,KAACgI,EAAAA,EAAK,CAACvH,KAAM,QAEfT,EAAAA,EAAAA,KAAA,UACED,QA5JI0M,KACtB,GAAIpI,EAAM8C,aAAc,CACtB,MAAMzC,EAAcC,EAAAA,EAAYC,UAC1B4H,EAAoBnI,EAAM8C,aAAalC,aAAasB,QAAOpB,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OAC7FgF,EAAaoC,EAAmB,QAASnI,EAAM8C,aAAa/B,IAC9D,GAwJkB/E,UAAU,yDACVT,MAAM,aAAYU,UAElBN,EAAAA,EAAAA,KAACiI,EAAAA,EAAK,CAACxH,KAAM,QAEfT,EAAAA,EAAAA,KAAA,UAAQK,UAAU,yDAAwDC,UACxEN,EAAAA,EAAAA,KAAC6D,EAAAA,EAAY,CAACpD,KAAM,WAI1BT,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAMwK,GAAU,GACzBlK,UAAU,yDAAwDC,UAElEN,EAAAA,EAAAA,KAAC0M,EAAAA,EAAC,CAACjM,KAAM,cAMb4D,EAAMsI,cACN3M,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sGAAqGC,SAAC,mBAKvHN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACnC+D,EAAM8C,cA8EN5G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EAEnCC,EAAAA,EAAAA,MAAA,OACEF,UAAU,qDACVsD,MAAO,CACLiJ,gBAAgB,qQAChBxM,gBAAiB,WAEnB,6BAAuBE,SAAA,CAEtB+D,EAAM6D,SAAShE,KAAKiE,IACnB,MAAMzE,EAAQyE,EAAQC,OAAOhD,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,KAClD,OACEpF,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETmI,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BlI,UAAS,QAAAS,OAAU4C,EAAQ,cAAgB,gBAAe,UAASpD,UAEnEC,EAAAA,EAAAA,MAAA,OAAKF,UAAS,oDAAAS,OACZ4C,EACI,0BACA,0BAENC,MAAO,CACLkJ,aAAcnJ,EAAQ,wBAA0B,yBAChDpD,SAAA,CACC6H,EAAQM,UACPlI,EAAAA,EAAAA,MAAA,OAAKF,UAAS,uCAAAS,OACZ4C,EACI,gCACA,+BACHpD,SAAA,EACDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yBAAwBC,SAAE6H,EAAQM,QAAQL,OAAO/C,aAC9DrF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,sBAAqBC,SAAE6H,EAAQM,QAAQhG,aAIvD0F,EAAQ1F,UACPzC,EAAAA,EAAAA,KAAA,KAAGK,UAAU,0BAAyBC,SAAE6H,EAAQ1F,WAGlDlC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DN,EAAAA,EAAAA,KAAA,QAAMK,UAAS,WAAAS,OAAa4C,EAAQ,iBAAmB,iBAAkBpD,SACtE2C,EAAWkF,EAAQd,aAErB3D,IACC1D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBC,SAC5BiL,EAAiBpD,SAKtBzE,IACA1D,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAM0K,EAActC,GAC7B9H,UAAU,wHAAuHC,UAEjIN,EAAAA,EAAAA,KAAC8M,EAAAA,EAAK,CAACrM,KAAM,WA5Cd0H,EAAQ/C,QAqDlBwG,EAAyB3H,OAAS,IACjCjE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBC,UACjCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qDACfL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kDAAkDsD,MAAO,CAAEoJ,eAAgB,WAC1F/M,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kDAAkDsD,MAAO,CAAEoJ,eAAgB,kBAMlG/M,EAAAA,EAAAA,KAAA,OAAKgN,IAAKpC,OAIXJ,IACCxK,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qEAAoEC,UACjFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,yDAAwDC,SAAA,CAAC,eACvDkK,EAAWpC,OAAO/C,cAEjCrF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,SAC7DkK,EAAW/H,cAGhBzC,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAM0K,EAAc,MAC7BpK,UAAU,oCAAmCC,UAE7CN,EAAAA,EAAAA,KAAC0M,EAAAA,EAAC,CAACjM,KAAM,aAOjBT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,UAAQK,UAAU,oFAAmFC,UACnGN,EAAAA,EAAAA,KAACiN,EAAAA,EAAS,CAACxM,KAAM,QAGnBT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBC,UAC9BN,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLmE,MAAOY,EACP5G,SAlZGiG,IACzBY,EAAcZ,EAAEC,OAAOF,QAElB6D,GAAY5D,EAAEC,OAAOF,MAAMgB,OAC9B8C,GAAY,GACHD,IAAa5D,EAAEC,OAAOF,MAAMgB,QACrC8C,GAAY,IA6YQjC,WAzYA5B,IACR,UAAVA,EAAE6B,MACJ7B,EAAEoG,iBACFvF,MAuYoBf,YAAY,iBACZvG,UAAU,gLAIdL,EAAAA,EAAAA,KAAA,UAAQK,UAAU,oFAAmFC,UACnGN,EAAAA,EAAAA,KAACmN,EAAAA,EAAK,CAAC1M,KAAM,QAGfT,EAAAA,EAAAA,KAAA,UACED,QAAS4H,EACTiB,UAAWnB,EAAWI,OACtBxH,UAAU,8GAA6GC,UAEvHN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAACpI,KAAM,gBA/MpBF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EAEnCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CAACtG,UAAU,mEAAmEI,KAAM,MAC3FT,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLkE,YAAY,2BACZC,MAAOrC,EACP3D,SAAWiG,GAAMrC,EAAcqC,EAAEC,OAAOF,OACxCxG,UAAU,8LAMhBL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACpC+D,EAAMpC,SACLjC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oEAEU,IAAzBgG,EAAcpC,QAChBjE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2EAA0EC,UACvFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,GAAIJ,UAAU,6BACnCL,EAAAA,EAAAA,KAAA,KAAAM,SAAG,0BACHN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,UAASC,SAAC,oDAI3B+F,EAAcnC,KAAKY,IAAI,IAAAoC,EAAA,OACrBlH,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETC,WAAY,CAAEC,gBAAiB,uBAC/BL,QAASA,IAAMoK,EAAgBrF,GAC/BzE,UAAU,2GAA0GC,UAEpHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sIAAqIC,SACjJiF,EAAqBT,KAEvBa,EAAoBb,KACnB9E,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+GAGnBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6DAA4DC,SACtEuE,EAAmBC,KAErBA,EAAKsC,cACJpH,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SACpD2C,EAAW6B,EAAKsC,YAAYC,iBAInC9G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,UAC7C,QAAhB4G,EAAApC,EAAKsC,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBzE,UAAW,2BAE/BqC,EAAKwC,YAAc,IAClBtH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wFAAuFC,SACnGwE,EAAKwC,YAAc,GAAK,MAAQxC,EAAKwC,wBA/B3CxC,EAAKM,wBA9I9BpF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8BAA6BC,UAC1CN,EAAAA,EAAAA,KAACC,EAAAA,EAAO+L,OAAM,CACZ7L,WAAY,CAAE8L,MAAO,KACrBE,SAAU,CAAEF,MAAO,IACnBlM,QAASA,IAAMwK,GAAU,GACzBlK,UAAU,wEAAuEC,UAEjFN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,S,mQClL/B,MAsjBA,EAtjB6BsJ,KAAO,IAADqD,EACjC,MAAO9C,EAAQC,IAAarL,EAAAA,EAAAA,WAAS,IAC9B6L,EAAiBsC,IAAsBnO,EAAAA,EAAAA,WAAS,IAChDoH,EAAOgH,IAAYpO,EAAAA,EAAAA,UAAiB,KACpCiI,EAAcgD,IAAmBjL,EAAAA,EAAAA,UAAsB,OACvDgJ,EAAUqF,IAAerO,EAAAA,EAAAA,UAAoB,KAC7CuI,EAAYC,IAAiBxI,EAAAA,EAAAA,UAAS,KACtCsF,EAAYC,IAAiBvF,EAAAA,EAAAA,UAAS,KACtC+C,EAASC,IAAchD,EAAAA,EAAAA,WAAS,IAChCsL,EAAYC,IAAiBvL,EAAAA,EAAAA,UAAyB,OACtDwL,EAAUC,IAAezL,EAAAA,EAAAA,WAAS,IAClCsO,EAAiBC,IAAsBvO,EAAAA,EAAAA,WAAS,GACjD0L,GAAiBC,EAAAA,EAAAA,QAAuB,MACxCC,GAAmBD,EAAAA,EAAAA,UACnBnG,EAAcC,EAAAA,EAAYC,UAC1B8I,GAAWC,EAAAA,EAAAA,OAGjBxL,EAAAA,EAAAA,YAAU,KACRkL,EAAmB1I,EAAAA,EAAYoG,qBAC9B,KAEH5I,EAAAA,EAAAA,YAAU,KACJ4I,GAAiBd,MACpB,CAACc,KAGJ5I,EAAAA,EAAAA,YAAU,KACJgF,GAAcyG,EAAazG,EAAa/B,OAC3C,CAAC+B,KAGJhF,EAAAA,EAAAA,YAAU,KAAO,IAADgJ,EACQ,QAAtBA,EAAAP,EAAeK,eAAO,IAAAE,GAAtBA,EAAwBC,eAAe,CAAEC,SAAU,aAClD,CAACnD,KAGJ/F,EAAAA,EAAAA,YAAU,KACJgF,GAAgBuD,IACdI,EAAiBG,SAASC,aAAaJ,EAAiBG,SAC5DH,EAAiBG,QAAU7I,YAAW,KACpCuI,GAAY,GACZkD,EAAAA,EAAc3D,WAAW/C,EAAa/B,KAAK,KAC1C,MAEE,KACD0F,EAAiBG,SAASC,aAAaJ,EAAiBG,YAE7D,CAACP,EAAUvD,KAGdhF,EAAAA,EAAAA,YAAU,KAER,MAAM2L,EAAgBnL,IAChBwE,GAAgBxE,EAAKoL,SAAW5G,EAAa/B,KAAOzC,EAAKqL,UAAsB,OAAXtJ,QAAW,IAAXA,OAAW,EAAXA,EAAaU,MACnFqI,EAAmB9K,EAAK+H,WAKtBuD,EAAoB9F,IAExBJ,QAAQmG,IAAI,wBAAyB/F,GACjChB,GAAgBgB,EAAQ4F,SAAW5G,EAAa/B,KAClDmI,GAAYY,GAAQ,IAAIA,EAAMhG,KAGhCmF,GAASc,GACPA,EAAUlK,KAAIY,GACZA,EAAKM,MAAQ+C,EAAQ4F,QAAMM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBvJ,GAAI,IAAEwC,aAAcxC,EAAKwC,aAAe,GAAK,EAAGF,YAAae,IAClErD,MAIHqC,GAAgBgB,EAAQ4F,SAAW5G,EAAa/B,KACnDkJ,OAAOC,cACL,IAAIC,YAAY,QAAS,CACvBC,OAAQ,CACN/L,KAAM,eACNyF,QAAQ,oBAADrH,OAAsBqH,EAAQC,OAAO/C,UAAS,MAAAvE,OAAKqH,EAAQ1F,cAU5E,OAHAoL,EAAAA,EAAca,GAAG,aAAcZ,GAC/BD,EAAAA,EAAca,GAAG,aAAcT,GAExB,KACLJ,EAAAA,EAAcc,IAAI,aAAcb,GAChCD,EAAAA,EAAcc,IAAI,aAAcV,MAEjC,CAAC9G,EAAczC,IAGlB,MAAMuF,EAAYrC,UAChB,IAAK,IAADgH,EAAAC,EACF3M,GAAW,GACX,MAAM4M,QAAiBC,EAAAA,EAAYC,eAC7BC,GAAyB,QAAbL,EAAAE,EAASnM,YAAI,IAAAiM,OAAA,EAAbA,EAAetI,SAAsB,QAAjBuI,EAAIC,EAASnM,YAAI,IAAAkM,OAAA,EAAbA,EAAeK,QAAS,GAClE5B,EAAS2B,EACX,CAAE,MAAOnH,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CAAC,QACC5F,GAAW,EACb,GAGI0L,EAAehG,UACnB,IAAK,IAADuH,EAAAC,EACFlN,GAAW,GACX,MAAM4M,QAAiBC,EAAAA,EAAYM,gBAAgBtB,GAC7CuB,GAA4B,QAAbH,EAAAL,EAASnM,YAAI,IAAAwM,OAAA,EAAbA,EAAejH,YAAyB,QAAjBkH,EAAIN,EAASnM,YAAI,IAAAyM,OAAA,EAAbA,EAAeF,QAAS,GACxE3B,EAAY+B,EACd,CAAE,MAAOxH,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CAAC,QACC5F,GAAW,EACb,GAeIqN,EAAqB3H,UACzB,GAAKH,EAAWI,QAAWV,EAC3B,IACE0G,EAAAA,EAAcrG,YAAY,CACxBuG,OAAQ5G,EAAa/B,IACrB3C,QAASgF,EAAWI,OACpBY,QAAmB,OAAV+B,QAAU,IAAVA,OAAU,EAAVA,EAAYpF,MAEvBsC,EAAc,IACd+C,EAAc,MACdE,GAAY,GACZkD,EAAAA,EAAc3D,WAAW/C,EAAa/B,KAAK,EAC7C,CAAE,MAAO0C,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GAWI7E,EAAcC,GAClB,IAAIL,KAAKK,GAAM6C,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YAY7DpB,EAAsBC,IAC1B,GAAkB,UAAdA,EAAKpC,KAAkB,OAAOoC,EAAKC,WAAa,aACpD,MAAMyK,EAAQ1K,EAAKG,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACjE,OAAOoK,EAAK,GAAA1O,OAAM0O,EAAMnK,UAAS,KAAAvE,OAAI0O,EAAMlK,UAAa,WAGpDC,EAAwBT,IAAgB,IAADU,EAC3C,GAAkB,UAAdV,EAAKpC,KAAkB,OAAqB,QAAd8C,EAAAV,EAAKC,iBAAS,IAAAS,OAAA,EAAdA,EAAgBC,OAAO,GAAGC,gBAAiB,IAC7E,MAAM8J,EAAQ1K,EAAKG,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACjE,OAAOoK,EACH,GAAA1O,OAAG0O,EAAMnK,UAAUI,OAAO,IAAE3E,OAAG0O,EAAMlK,SAASG,OAAO,IAAKC,cAC1D,KAGAC,GAAuBb,IAC3B,GAAkB,UAAdA,EAAKpC,KAAkB,OAAO,EAClC,MAAM8M,EAAQ1K,EAAKG,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OACjE,OAAY,OAALoK,QAAK,IAALA,OAAK,EAALA,EAAO5J,YAAY,GAGtB2F,GAAoBpD,GACpBA,EAAQC,OAAOhD,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,KAAY,KAChD+C,EAAQqD,QAAUrD,EAAQqD,OAAOvH,OAAS,GACrCjE,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAACpL,UAAU,0BAE3B8H,EAAQuD,aAAevD,EAAQuD,YAAYzH,OAAS,GAC/CjE,EAAAA,EAAAA,KAACyL,EAAAA,EAAU,CAACpL,UAAU,2BAExBL,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CAACtL,UAAU,0BAGpBgG,GAAgBC,EAAMC,QAAOzB,GACjCD,EAAmBC,GAAM0B,cAAcC,SAASjC,EAAWgC,iBAI7D,OAAKuE,GAgBHxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAC+L,EAAAA,EAAe,CAAAzL,UACZgK,IACA/J,EAAAA,EAAAA,MAACN,EAAAA,EAAO+L,OAAM,CACZ3D,QAAS,CAAE4D,MAAO,GAClBzD,QAAS,CAAEyD,MAAO,GAClBC,KAAM,CAAED,MAAO,GACf9L,WAAY,CAAE8L,MAAO,KACrBE,SAAU,CAAEF,MAAO,IACnBlM,QAASA,KACFgL,EAGHR,GAAU,GAFVmD,EAAS,YAKbrN,UAAU,iFAAgFC,SAAA,EAE1FN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,KAEpB6F,EAAMmJ,QAAO,CAACC,EAAO5K,IAAS4K,GAAS5K,EAAKwC,aAAe,IAAI,GAAK,IACnEtH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+GAA8GC,SAC1HgG,EAAMmJ,QAAO,CAACC,EAAO5K,IAAS4K,GAAS5K,EAAKwC,aAAe,IAAI,GAAK,GACjE,MACAhB,EAAMmJ,QAAO,CAACC,EAAO5K,IAAS4K,GAAS5K,EAAKwC,aAAe,IAAI,WAO7EtH,EAAAA,EAAAA,KAAC+L,EAAAA,EAAe,CAAAzL,SACbgK,IACC/J,EAAAA,EAAAA,MAACN,EAAAA,EAAOC,IAAG,CACTmI,QAAS,CAAEC,QAAS,EAAG2D,MAAO,GAAK1D,EAAG,IACtCC,QAAS,CAAEF,QAAS,EAAG2D,MAAO,EAAG1D,EAAG,GACpC2D,KAAM,CAAE5D,QAAS,EAAG2D,MAAO,GAAK1D,EAAG,IACnClI,UAAU,2IAA0IC,SAAA,EAGpJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kFAAiFC,SAAA,EAC9FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,CACzC6G,IACCnH,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAMoK,EAAgB,MAC/B9J,UAAU,yDAAwDC,UAElEN,EAAAA,EAAAA,KAACoM,EAAAA,EAAS,CAAC3L,KAAM,QAGrBF,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,gBAAeC,SAC1B6G,EAAetC,EAAmBsC,GAAgB,aAEpDA,IACCnH,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yBAAwBC,SAClCqF,GAAoBwB,GAAgB,SAC4B,QAA/DiG,EAAAjG,EAAalC,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,cAAI,IAAAgI,GAA/DA,EAAiE7N,SAAQ,aAAAuB,OAvHvEoC,KACtB,MAAMJ,EAAM,IAAID,KACVtD,EAAW,IAAIsD,KAAKK,GACpBmJ,EAAgBjJ,KAAKC,OAAOP,EAAIQ,UAAY/D,EAAS+D,WAAS,KACpE,OAAI+I,EAAgB,EAAU,WAC1BA,EAAgB,GAAU,GAANvL,OAAUuL,EAAa,SAC3CA,EAAgB,KAAY,GAANvL,OAAUsC,KAAKC,MAAMgJ,EAAgB,IAAG,SAC3D9M,EAASgE,sBAiHmB+I,CAAenF,EAAalC,aAAaC,MAAKC,GAAKA,EAAEC,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OAAM7F,WAC7F,mBAKZgB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,CACzC6G,IACC5G,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAA1D,SAAA,EACEN,EAAAA,EAAAA,KAAA,UACED,QAASA,OACTM,UAAU,yDACVT,MAAM,aAAYU,UAElBN,EAAAA,EAAAA,KAACgI,EAAAA,EAAK,CAACvH,KAAM,QAEfT,EAAAA,EAAAA,KAAA,UACED,QAASA,OACTM,UAAU,yDACVT,MAAM,aAAYU,UAElBN,EAAAA,EAAAA,KAACiI,EAAAA,EAAK,CAACxH,KAAM,WAInBT,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAMwK,GAAU,GACzBlK,UAAU,yDACVT,MAAM,QAAOU,UAEbN,EAAAA,EAAAA,KAAC0M,EAAAA,EAAC,CAACjM,KAAM,cAKfT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACnC6G,GA8EA5G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EAEnCC,EAAAA,EAAAA,MAAA,OACEF,UAAU,qDACVsD,MAAO,CACLiJ,gBAAgB,qQAChBxM,gBAAiB,WAEnB,6BAAuBE,SAAA,CAEtB4H,EAAShE,KAAKiE,IACb,MAAMzE,EAAQyE,EAAQC,OAAOhD,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,KAClD,OACEpF,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETmI,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BlI,UAAS,QAAAS,OAAU4C,EAAQ,cAAgB,gBAAe,UAASpD,UAEnEC,EAAAA,EAAAA,MAAA,OAAKF,UAAS,oDAAAS,OAAsD4C,EAC9D,0BACA,0BAEJC,MAAO,CACLkJ,aAAcnJ,EAAQ,wBAA0B,yBAChDpD,SAAA,CACD6H,EAAQM,UACPlI,EAAAA,EAAAA,MAAA,OAAKF,UAAS,uCAAAS,OAAyC4C,EACjD,gCACA,+BACDpD,SAAA,EACHN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yBAAwBC,SAAE6H,EAAQM,QAAQL,OAAO/C,aAC9DrF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,sBAAqBC,SAAE6H,EAAQM,QAAQhG,aAIvD0F,EAAQ1F,UACPzC,EAAAA,EAAAA,KAAA,KAAGK,UAAU,0BAAyBC,SAAE6H,EAAQ1F,UAGjD0F,EAAQwH,OAASxH,EAAQwH,MAAM1L,OAAS,IACvCjE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBC,SAC5B6H,EAAQwH,MAAMzL,KAAK0L,IAClB5P,EAAAA,EAAAA,KAAA,OAAAM,SACGsP,EAAKC,SAASC,WAAW,WACxB9P,EAAAA,EAAAA,KAAA,OACE+P,IAAKH,EAAKI,IACVC,IAAKL,EAAKM,aACV7P,UAAU,+BAGZE,EAAAA,EAAAA,MAAA,KACE4P,KAAMP,EAAKI,IACXjJ,OAAO,SACPqJ,IAAI,sBACJ/P,UAAU,gDAA+CC,SAAA,EAEzDN,EAAAA,EAAAA,KAACiN,EAAAA,EAAS,CAACxM,KAAM,MACjBT,EAAAA,EAAAA,KAAA,QAAAM,SAAOsP,EAAKM,mBAfRN,EAAKxK,UAuBrB7E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DN,EAAAA,EAAAA,KAAA,QAAMK,UAAS,WAAAS,OAAa4C,EAAQ,iBAAmB,iBAAkBpD,SACtE2C,EAAWkF,EAAQd,aAErB3D,IACC1D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,iBAAgBC,SAC5BiL,GAAiBpD,SAKtBzE,IACA1D,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAM0K,EAActC,GAC7B9H,UAAU,wHAAuHC,UAEjIN,EAAAA,EAAAA,KAAC8M,EAAAA,EAAK,CAACrM,KAAM,WApEd0H,EAAQ/C,QA6ElBoI,IACCxN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qBAAoBC,UACjCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qDACfL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kDAAkDsD,MAAO,CAAEoJ,eAAgB,WAC1F/M,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kDAAkDsD,MAAO,CAAEoJ,eAAgB,kBAMlG/M,EAAAA,EAAAA,KAAA,OAAKgN,IAAKpC,OAIXJ,IACCxK,EAAAA,EAAAA,KAAA,OAAKK,UAAU,qEAAoEC,UACjFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,yDAAwDC,SAAA,CAAC,eACvDkK,EAAWpC,OAAO/C,cAEjCrF,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,SAC7DkK,EAAW/H,cAGhBzC,EAAAA,EAAAA,KAAA,UACED,QAASA,IAAM0K,EAAc,MAC7BpK,UAAU,oCAAmCC,UAE7CN,EAAAA,EAAAA,KAAC0M,EAAAA,EAAC,CAACjM,KAAM,aAOjBT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,UAAQK,UAAU,oFAAmFC,UACnGN,EAAAA,EAAAA,KAACiN,EAAAA,EAAS,CAACxM,KAAM,QAGnBT,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBC,UAC9BN,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLmE,MAAOY,EACP5G,SA5ZGiG,IACzBY,EAAcZ,EAAEC,OAAOF,QAClB6D,GAAY5D,EAAEC,OAAOF,MAAMgB,QAC9B8C,GAAY,GACRxD,GAAc0G,EAAAA,EAAc3D,WAAW/C,EAAa/B,KAAK,IACpDsF,IAAa5D,EAAEC,OAAOF,MAAMgB,SACrC8C,GAAY,GACRxD,GAAc0G,EAAAA,EAAc3D,WAAW/C,EAAa/B,KAAK,KAsZzCsD,WAjYA5B,IACR,UAAVA,EAAE6B,MACJ7B,EAAEoG,iBACFqC,MA+XoB3I,YAAY,iBACZvG,UAAU,gLAIdL,EAAAA,EAAAA,KAAA,UAAQK,UAAU,oFAAmFC,UACnGN,EAAAA,EAAAA,KAACmN,EAAAA,EAAK,CAAC1M,KAAM,QAGfT,EAAAA,EAAAA,KAAA,UACED,QAASwP,EACT3G,UAAWnB,EAAWI,OACtBxH,UAAU,8GAA6GC,UAEvHN,EAAAA,EAAAA,KAAC6I,EAAAA,EAAI,CAACpI,KAAM,gBAvOpBF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EAEnCN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kCAAiCC,UAC9CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CAACtG,UAAU,mEAAmEI,KAAM,MAC3FT,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLkE,YAAY,2BACZC,MAAOrC,EACP3D,SAAWiG,GAAMrC,EAAcqC,EAAEC,OAAOF,OACxCxG,UAAU,8LAMhBL,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACpC2B,GACCjC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oEAEU,IAAzBgG,GAAcpC,QAChBjE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2EAA0EC,UACvFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,GAAIJ,UAAU,6BACnCL,EAAAA,EAAAA,KAAA,KAAAM,SAAG,0BACHN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,UAASC,SAAC,oDAI3B+F,GAAcnC,KAAKY,IAAI,IAAAoC,EAAA,OACrBlH,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CAETC,WAAY,CAAEC,gBAAiB,uBAC/BL,QAASA,IAAMoK,EAAgBrF,GAC/BzE,UAAU,2GAA0GC,UAEpHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sIAAqIC,SACjJiF,EAAqBT,KAEvBa,GAAoBb,KACnB9E,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+GAGnBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6DAA4DC,SACtEuE,EAAmBC,KAErBA,EAAKsC,cACJpH,EAAAA,EAAAA,KAAA,KAAGK,UAAU,2CAA0CC,SACpD2C,EAAW6B,EAAKsC,YAAYC,iBAInC9G,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,UAC7C,QAAhB4G,EAAApC,EAAKsC,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBzE,UAAW,2BAE/BqC,EAAKwC,YAAc,IAClBtH,EAAAA,EAAAA,KAAA,OAAKK,UAAU,6FAA4FC,SACxGwE,EAAKwC,YAAc,GAAK,MAAQxC,EAAKwC,wBA/B3CxC,EAAKM,wBA9I9BpF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8BAA6BC,UAC1CN,EAAAA,EAAAA,KAACC,EAAAA,EAAO+L,OAAM,CACZ7L,WAAY,CAAE8L,MAAO,KACrBE,SAAU,CAAEF,MAAO,IACnBlM,QAASA,IAAM2N,EAAS,WACxBrN,UAAU,wEAAuEC,UAEjFN,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,S,wMCzN/B,MAiYA,EAjY2BqJ,KACzB,MAAOuG,EAAUC,IAAepR,EAAAA,EAAAA,UAAwB,KACjDsF,EAAYC,IAAiBvF,EAAAA,EAAAA,UAAS,KACtC+C,EAASC,IAAchD,EAAAA,EAAAA,WAAS,IAChC4I,EAAOyI,IAAYrR,EAAAA,EAAAA,UAAwB,OAC3CsR,EAAMC,IAAWvR,EAAAA,EAAAA,UAAS,IAC1BwR,EAASC,IAAczR,EAAAA,EAAAA,WAAS,IAChC0R,EAAcC,IAAmB3R,EAAAA,EAAAA,UAAwB,OAE1D,WAAEoF,EAAU,UAAE2F,IAAc1F,EAAAA,EAAAA,KAC5BG,EAAcC,EAAAA,EAAYC,UAE1BkM,GAAeC,EAAAA,EAAAA,cAAYnJ,UAC/B,IACE1F,GAAW,GACXqO,EAAS,MAET,MAAMzB,QAAiBkC,MAAM,6CAADlQ,OACmB0P,EAAI,6CACjD,CACES,SAAO5C,EAAAA,EAAAA,GAAA,CACL,eAAgB,oBACb1J,EAAAA,EAAYuM,oBAKrB,IAAKpC,EAASqC,GAAI,CAChB,GAAwB,MAApBrC,EAASrL,OAEX,MADAkB,EAAAA,EAAYyM,SACN,IAAIC,MAAM,8CAElB,MAAM,IAAIA,MAAM,uBAADvQ,OAAwBgO,EAASrL,QAClD,CAEA,MAAMd,QAAamM,EAASwC,OAG5B,IAAIC,EAAgB,GAChBC,EAAa,KAoBjB,GAjBI7O,GAAwB,kBAATA,IACbA,EAAK8O,SAAW9O,EAAKA,KACnB+O,MAAMC,QAAQhP,EAAKA,KAAK4O,QAC1BA,EAAQ5O,EAAKA,KAAK4O,MAClBC,EAAa7O,EAAKA,KAAK6O,YACdE,MAAMC,QAAQhP,EAAKA,QAC5B4O,EAAQ5O,EAAKA,MAEN+O,MAAMC,QAAQhP,EAAK4O,QAC5BA,EAAQ5O,EAAK4O,MACbC,EAAa7O,EAAK6O,YACTE,MAAMC,QAAQhP,KACvB4O,EAAQ5O,KAKP+O,MAAMC,QAAQJ,GAEjB,MADAxJ,QAAQD,MAAM,+BAAgCnF,GACxC,IAAI0O,MAAM,uCAIlB,MAAMO,EAAaL,EAAMhL,QAAOjE,GAEzBA,GAAwB,kBAATA,GAAsBA,EAAK8C,IAMxC9C,EAAK8C,OAAmB,OAAXV,QAAW,IAAXA,OAAW,EAAXA,EAAaU,MAL/B2C,QAAQ8J,KAAK,uBAAwBvP,IAC9B,KAQTgO,EADW,IAATE,EACUoB,EAEAzD,GAAQ,IAAIA,KAASyD,IAKjCjB,EADEa,GAAoC,kBAAfA,GACW,IAAvBA,EAAWM,QAEW,KAAtBF,EAAW3N,OAG1B,CAAE,MAAO6D,GACPC,QAAQD,MAAM,2BAA4BA,GAC1CyI,EAASzI,aAAiBuJ,MAAQvJ,EAAMK,QAAU,0BACpD,CAAC,QACCjG,GAAW,EACb,IACC,CAACsO,EAAiB,OAAX9L,QAAW,IAAXA,OAAW,EAAXA,EAAaU,OAEvBjD,EAAAA,EAAAA,YAAU,KACR2O,MACC,CAACA,IAEJ,MAiCMiB,EAAmB1B,EAAS9J,QAAOyL,IACvC,IAAKA,GAA8B,kBAAZA,EAAsB,OAAO,EAEpD,MAAM3M,EAAY4M,OAAOD,EAAQ3M,WAAa,IACxCC,EAAW2M,OAAOD,EAAQ1M,UAAY,IACtC4M,EAAQD,OAAOD,EAAQE,OAAS,IAChCC,EAAW,GAAArR,OAAGuE,EAAS,KAAAvE,OAAIwE,GAAWkB,cACtC4L,EAAc5N,EAAWgC,cAE/B,OAAO2L,EAAS1L,SAAS2L,IAAgBF,EAAM1L,cAAcC,SAAS2L,MAGlEC,EAAmBN,EAAiBxL,QAAOyL,GAAWA,EAAQM,aAC9DC,EAAkBR,EAAiBxL,QAAOyL,IAAYA,EAAQM,aAE9DhG,EAAkBpJ,IACtB,IAAKA,EAAM,MAAO,QAElB,IACE,MAAMJ,EAAM,IAAID,KACVtD,EAAW,IAAIsD,KAAKK,GACpBmJ,EAAgBjJ,KAAKC,OAAOP,EAAIQ,UAAY/D,EAAS+D,WAAS,KAEpE,OAAI+I,EAAgB,EAAU,WAC1BA,EAAgB,GAAU,GAANvL,OAAUuL,EAAa,SAC3CA,EAAgB,KAAY,GAANvL,OAAUsC,KAAKC,MAAMgJ,EAAgB,IAAG,SAC3D9M,EAASgE,oBAClB,CAAE,MAAOuE,GACP,MAAO,SACT,GAGI0K,EAAkD9S,IAAkB,IAAjB,QAAEsS,GAAStS,EAElE,IAAKsS,GAA8B,kBAAZA,IAAyBA,EAAQ5M,IACtD,OAAO,KAIT,MAAMC,EAAY4M,OAAOD,EAAQ3M,WAAa,WACxCC,EAAW2M,OAAOD,EAAQ1M,UAAY,QACtC4M,EAAQD,OAAOD,EAAQE,OAAS,YAChCC,EAAQ,GAAArR,OAAMuE,EAAS,KAAAvE,OAAIwE,GAC3BmN,EAAW,GAAA3R,OAAGuE,EAAUI,OAAO,IAAE3E,OAAGwE,EAASG,OAAO,IAAKC,cAE/D,OACE1F,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,WAAY,CAAEC,gBAAiB,4BAC/BC,UAAU,2GAA0GC,UAEpHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,gIAA+HC,SAC3ImS,IAEFT,EAAQpM,WACP5F,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2GAEhB2R,EAAQM,aACPtS,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+FAA8FC,UAC3GN,EAAAA,EAAAA,KAAC0S,EAAAA,EAAI,CAACjS,KAAM,GAAIJ,UAAU,kCAIhCE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,6DAA4DC,SACtE6R,KAEH5R,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CN,EAAAA,EAAAA,KAAA,UACEK,UAAU,mEACVT,MAAM,aACNG,QAAU+G,IACRA,EAAE6L,mBAEFrS,UAEFN,EAAAA,EAAAA,KAACgI,EAAAA,EAAK,CAACvH,KAAM,QAEfT,EAAAA,EAAAA,KAAA,UACEK,UAAU,kEACVT,MAAM,aACNG,QAAU+G,IACRA,EAAE6L,mBAEFrS,UAEFN,EAAAA,EAAAA,KAACiI,EAAAA,EAAK,CAACxH,KAAM,QAEfT,EAAAA,EAAAA,KAAA,UACED,QAAU+G,IACRA,EAAE6L,kBA7HI/K,WACtB,GAAIgJ,IAAiBoB,EAAQ5M,IAE7B,IACEyL,EAAgBmB,EAAQ5M,KACxBmL,EAAS,MAGT,MAAMzB,QAAiBC,EAAAA,EAAY6D,qBAAqBZ,EAAQ5M,KAEhE,IAAI0J,EAAS2C,UAAW3C,EAASnM,KAO/B,MAAM,IAAI0O,MAAMvC,EAAS3G,SAAW,+BAL9B8B,IAGN3F,EAAWwK,EAASnM,KAIxB,CAAE,MAAOmF,GACPC,QAAQD,MAAM,wBAAyBA,GACvCyI,EAASzI,aAAiBuJ,MAAQvJ,EAAMK,QAAU,uBACpD,CAAC,QACC0I,EAAgB,KAClB,GAsGgBgC,CAAgBb,IAElBpJ,SAAUgI,IAAiBoB,EAAQ5M,IACnC/E,UAAU,sFACVT,MAAM,aAAYU,SAEjBsQ,IAAiBoB,EAAQ5M,KACxBpF,EAAAA,EAAAA,KAAC8S,EAAAA,EAAM,CAACrS,KAAM,GAAIJ,UAAU,kBAE5BL,EAAAA,EAAAA,KAACgH,EAAAA,EAAa,CAACvG,KAAM,cAK7BT,EAAAA,EAAAA,KAAA,KAAGK,UAAU,oDAAmDC,SAC7D4R,KAEHlS,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAAuBC,SACjC0R,EAAQpM,SAAW,SAAQ,aAAA9E,OAAgBwL,EAAe0F,EAAQzS,sBAQ/E,OACEgB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAE7DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDN,EAAAA,EAAAA,KAAA,MAAIK,UAAU,sDAAqDC,SAAC,cACpEN,EAAAA,EAAAA,KAAA,UAAQK,UAAU,wIAAuIC,UACvJN,EAAAA,EAAAA,KAAC0G,EAAAA,EAAQ,CAACjG,KAAM,WAKpBF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,WAAUC,SAAA,EACvBN,EAAAA,EAAAA,KAAC2G,EAAAA,EAAM,CAACtG,UAAU,mEAAmEI,KAAM,MAC3FT,EAAAA,EAAAA,KAAA,SACE0C,KAAK,OACLkE,YAAY,qBACZC,MAAOrC,EACP3D,SAAWiG,GAAMrC,EAAcqC,EAAEC,OAAOF,OACxCxG,UAAU,sJAMfyH,IACCvH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6DAA4DC,SAAA,EACzEN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,yCAAwCC,SAAEwH,KACvD9H,EAAAA,EAAAA,KAAA,UACED,QAASA,KACPwQ,EAAS,MACTE,EAAQ,GACRK,KAEFzQ,UAAU,8DAA6DC,SACxE,kBAOLN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBC,SACpC2B,GAAoB,IAATuO,GACVxQ,EAAAA,EAAAA,KAAA,OAAKK,UAAU,0CAAyCC,UACtDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,+EACfL,EAAAA,EAAAA,KAAA,KAAGK,UAAU,wBAAuBC,SAAC,8BAIzCC,EAAAA,EAAAA,MAAAyD,EAAAA,SAAA,CAAA1D,SAAA,CAEG+R,EAAiBpO,OAAS,IACzB1D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,yEAAwEC,SAAA,EACpFN,EAAAA,EAAAA,KAAC0S,EAAAA,EAAI,CAACjS,KAAM,GAAIJ,UAAU,yBAAyB,cACvCgS,EAAiBpO,OAAO,SAGvCoO,EAAiBnO,KAAK8N,IACrBhS,EAAAA,EAAAA,KAACwS,EAAW,CAAmBR,QAASA,GAAtBA,EAAQ5M,UAM/BmN,EAAgBtO,OAAS,IACxB1D,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,wCAAuCC,UACpDC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,yEAAwEC,SAAA,EACpFN,EAAAA,EAAAA,KAACmJ,EAAAA,EAAK,CAAC1I,KAAM,GAAIJ,UAAU,SAAS,iBACrBkS,EAAgBtO,OAAO,SAGzCsO,EAAgBrO,KAAK8N,IACpBhS,EAAAA,EAAAA,KAACwS,EAAW,CAAmBR,QAASA,GAAtBA,EAAQ5M,UAM/BsL,IAAYzO,GAAWsQ,EAAgBtO,OAAS,IAC/CjE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,MAAKC,UAClBN,EAAAA,EAAAA,KAAA,UACED,QAnNOgT,MAChB9Q,GAAWyO,GACdD,GAAQtC,GAAQA,EAAO,KAkNX9N,UAAU,yFAAwFC,SACnG,yBAOJ2B,GAAWuO,EAAO,IACjBjQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uCAAsCC,SAAA,EACnDN,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kEACfL,EAAAA,EAAAA,KAAA,QAAMK,UAAU,6BAA4BC,SAAC,uBAKpB,IAA5ByR,EAAiB9N,SAAiBhC,IAAY6F,IAC7C9H,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2EAA0EC,UACvFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BN,EAAAA,EAAAA,KAACmJ,EAAAA,EAAK,CAAC1I,KAAM,GAAIJ,UAAU,6BAC3BL,EAAAA,EAAAA,KAAA,KAAGK,UAAU,cAAaC,SAAC,uBAC3BN,EAAAA,EAAAA,KAAA,KAAGK,UAAU,UAASC,SACnBkE,EAAa,kCAAoC,wCAElDA,IACAxE,EAAAA,EAAAA,KAAA,UACED,QAASA,KACP0Q,EAAQ,GACRK,KAEFzQ,UAAU,iDAAgDC,SAC3D,kC","sources":["features/chat/Settings/Settings.tsx","features/chat/Status/Status.tsx","features/chat/Home/Home.tsx","features/chat/Chat/ChatWidget.tsx","features/chat/ChatWidget/ChatWidget.tsx","features/chat/Contacts/Contacts.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  User, \n  Bell, \n  Shield, \n  Palette, \n  Globe, \n  HelpCircle,\n  ChevronRight,\n  Moon,\n  Sun,\n  Volume2,\n  VolumeX,\n  Eye,\n  EyeOff,\n  Smartphone\n} from 'lucide-react';\nimport { useTheme } from '../../../app/providers/ThemeContext';\n\nconst Settings: React.FC = () => {\n  const { theme, toggleTheme } = useTheme();\n  const [notifications, setNotifications] = useState(true);\n  const [sounds, setSounds] = useState(true);\n  const [readReceipts, setReadReceipts] = useState(true);\n  const [lastSeen, setLastSeen] = useState(true);\n\n  const SettingItem: React.FC<{\n    icon: React.ReactNode;\n    title: string;\n    subtitle?: string;\n    action?: React.ReactNode;\n    onClick?: () => void;\n  }> = ({ icon, title, subtitle, action, onClick }) => (\n    <motion.div\n      whileHover={{ backgroundColor: 'rgba(59, 130, 246, 0.05)' }}\n      onClick={onClick}\n      className=\"p-4 hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer\"\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"w-10 h-10 bg-gray-100 dark:bg-gray-700 rounded-full flex items-center justify-center text-gray-600 dark:text-gray-300\">\n          {icon}\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <p className=\"text-sm font-medium text-gray-900 dark:text-white\">{title}</p>\n          {subtitle && (\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{subtitle}</p>\n          )}\n        </div>\n        {action || <ChevronRight size={20} className=\"text-gray-400\" />}\n      </div>\n    </motion.div>\n  );\n\n  const ToggleSwitch: React.FC<{ enabled: boolean; onChange: (enabled: boolean) => void }> = ({ enabled, onChange }) => (\n    <button\n      onClick={() => onChange(!enabled)}\n      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n        enabled ? 'bg-blue-600' : 'bg-gray-300 dark:bg-gray-600'\n      }`}\n    >\n      <span\n        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n          enabled ? 'translate-x-6' : 'translate-x-1'\n        }`}\n      />\n    </button>\n  );\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Settings</h2>\n      </div>\n\n      {/* Settings List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {/* Profile Section */}\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <SettingItem\n            icon={<User size={20} />}\n            title=\"Profile\"\n            subtitle=\"Update your profile information\"\n          />\n        </div>\n\n        {/* Appearance Section */}\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Appearance</h3>\n          </div>\n          <SettingItem\n            icon={theme === 'dark' ? <Moon size={20} /> : <Sun size={20} />}\n            title=\"Theme\"\n            subtitle={`Currently using ${theme} mode`}\n            action={\n              <button\n                onClick={toggleTheme}\n                className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700\"\n              >\n                {theme === 'dark' ? 'Light' : 'Dark'}\n              </button>\n            }\n          />\n        </div>\n\n        {/* Notifications Section */}\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Notifications</h3>\n          </div>\n          <SettingItem\n            icon={<Bell size={20} />}\n            title=\"Push Notifications\"\n            subtitle=\"Receive notifications for new messages\"\n            action={<ToggleSwitch enabled={notifications} onChange={setNotifications} />}\n          />\n          <SettingItem\n            icon={sounds ? <Volume2 size={20} /> : <VolumeX size={20} />}\n            title=\"Notification Sounds\"\n            subtitle=\"Play sounds for notifications\"\n            action={<ToggleSwitch enabled={sounds} onChange={setSounds} />}\n          />\n        </div>\n\n        {/* Privacy Section */}\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Privacy</h3>\n          </div>\n          <SettingItem\n            icon={readReceipts ? <Eye size={20} /> : <EyeOff size={20} />}\n            title=\"Read Receipts\"\n            subtitle=\"Let others know when you've read their messages\"\n            action={<ToggleSwitch enabled={readReceipts} onChange={setReadReceipts} />}\n          />\n          <SettingItem\n            icon={<Globe size={20} />}\n            title=\"Last Seen\"\n            subtitle=\"Show when you were last online\"\n            action={<ToggleSwitch enabled={lastSeen} onChange={setLastSeen} />}\n          />\n          <SettingItem\n            icon={<Shield size={20} />}\n            title=\"Blocked Contacts\"\n            subtitle=\"Manage blocked users\"\n          />\n        </div>\n\n        {/* Chat Section */}\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Chat</h3>\n          </div>\n          <SettingItem\n            icon={<Smartphone size={20} />}\n            title=\"Chat Backup\"\n            subtitle=\"Backup and restore your chats\"\n          />\n          <SettingItem\n            icon={<Palette size={20} />}\n            title=\"Chat Wallpaper\"\n            subtitle=\"Customize your chat background\"\n          />\n        </div>\n\n        {/* Help Section */}\n        <div>\n          <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n            <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Support</h3>\n          </div>\n          <SettingItem\n            icon={<HelpCircle size={20} />}\n            title=\"Help & Support\"\n            subtitle=\"Get help and contact support\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Plus, \n  Camera, \n  Type, \n  Eye,\n  MoreVertical,\n  Clock\n} from 'lucide-react';\n\ninterface StatusItem {\n  id: string;\n  user: {\n    id: string;\n    name: string;\n    avatar: string;\n  };\n  content: {\n    type: 'text' | 'image' | 'video';\n    data: string;\n    backgroundColor?: string;\n  };\n  timestamp: Date;\n  views: number;\n  isViewed: boolean;\n}\n\nconst Status: React.FC = () => {\n  const [statuses, setStatuses] = useState<StatusItem[]>([]);\n  const [myStatuses, setMyStatuses] = useState<StatusItem[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Mock data - replace with actual API call\n    setTimeout(() => {\n      setMyStatuses([\n        {\n          id: '1',\n          user: {\n            id: 'me',\n            name: 'My Status',\n            avatar: 'ME'\n          },\n          content: {\n            type: 'text',\n            data: 'Working on something amazing! 🚀',\n            backgroundColor: '#3B82F6'\n          },\n          timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\n          views: 5,\n          isViewed: true\n        }\n      ]);\n\n      setStatuses([\n        {\n          id: '2',\n          user: {\n            id: '1',\n            name: 'John Doe',\n            avatar: 'JD'\n          },\n          content: {\n            type: 'text',\n            data: 'Beautiful sunset today! 🌅',\n            backgroundColor: '#F59E0B'\n          },\n          timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n          views: 12,\n          isViewed: false\n        },\n        {\n          id: '3',\n          user: {\n            id: '2',\n            name: 'Jane Smith',\n            avatar: 'JS'\n          },\n          content: {\n            type: 'text',\n            data: 'Coffee time! ☕',\n            backgroundColor: '#8B5CF6'\n          },\n          timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4), // 4 hours ago\n          views: 8,\n          isViewed: true\n        }\n      ]);\n      setLoading(false);\n    }, 1000);\n  }, []);\n\n  const formatTime = (date: Date) => {\n    const now = new Date();\n    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));\n    \n    if (diffInHours < 1) return 'just now';\n    if (diffInHours < 24) return `${diffInHours}h ago`;\n    return date.toLocaleDateString();\n  };\n\n  const StatusItem: React.FC<{ status: StatusItem; isOwn?: boolean }> = ({ status, isOwn = false }) => (\n    <motion.div\n      whileHover={{ backgroundColor: 'rgba(59, 130, 246, 0.05)' }}\n      className=\"p-4 hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer\"\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"relative\">\n          <div className={`w-12 h-12 rounded-full flex items-center justify-center text-white font-semibold border-2 ${\n            status.isViewed ? 'border-gray-300' : 'border-green-500'\n          }`} style={{ backgroundColor: status.content.backgroundColor || '#6B7280' }}>\n            {status.user.avatar}\n          </div>\n          {isOwn && (\n            <div className=\"absolute bottom-0 right-0 w-4 h-4 bg-blue-600 rounded-full flex items-center justify-center\">\n              <Plus size={10} className=\"text-white\" />\n            </div>\n          )}\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n              {status.user.name}\n            </p>\n            <div className=\"flex items-center space-x-2\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {formatTime(status.timestamp)}\n              </p>\n              {isOwn && (\n                <button className=\"p-1 text-gray-400 hover:text-gray-600 rounded\">\n                  <MoreVertical size={16} />\n                </button>\n              )}\n            </div>\n          </div>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n            {status.content.type === 'text' ? status.content.data : `${status.content.type} status`}\n          </p>\n          {isOwn && (\n            <div className=\"flex items-center mt-1\">\n              <Eye size={12} className=\"text-gray-400 mr-1\" />\n              <span className=\"text-xs text-gray-400\">{status.views} views</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Status</h2>\n          <div className=\"flex items-center space-x-2\">\n            <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\">\n              <Camera size={20} />\n            </button>\n            <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\">\n              <Type size={20} />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Status List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {loading ? (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        ) : (\n          <>\n            {/* My Status */}\n            <div>\n              <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n                <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">My Status</h3>\n              </div>\n              {myStatuses.length > 0 ? (\n                myStatuses.map((status) => (\n                  <StatusItem key={status.id} status={status} isOwn={true} />\n                ))\n              ) : (\n                <div className=\"p-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-12 h-12 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center\">\n                      <Plus size={24} className=\"text-gray-400\" />\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">My Status</p>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Tap to add status update</p>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Recent Updates */}\n            {statuses.length > 0 && (\n              <div>\n                <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n                  <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Recent Updates</h3>\n                </div>\n                {statuses.map((status) => (\n                  <StatusItem key={status.id} status={status} />\n                ))}\n              </div>\n            )}\n\n            {statuses.length === 0 && myStatuses.length === 0 && !loading && (\n              <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n                <div className=\"text-center\">\n                  <Clock size={48} className=\"mx-auto mb-4 opacity-50\" />\n                  <p className=\"font-medium\">No status updates</p>\n                  <p className=\"text-sm\">Share your status to let contacts know what's on your mind</p>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Status;","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  MessageCircle, \n  Users, \n  Clock, \n  Settings as SettingsIcon,\n  Search,\n  Phone,\n  Video,\n  UserPlus,\n  Send\n} from 'lucide-react';\nimport { Routes, Route } from 'react-router-dom';\nimport Contacts from '../Contacts/Contacts';\nimport Status from '../Status/Status';\nimport Settings from '../Settings/Settings';\nimport { authService } from '../../../shared/services/auth.service';\nimport ChatWidget1 from '../Chat/ChatWidget';\nimport ChatWidget2 from '../ChatWidget/ChatWidget';\nimport { useChat } from '../../../app/providers/ChatContext';\nimport { Chat, User } from '../../../shared/types';\n\ntype ActiveTab = 'chats' | 'contacts' | 'status' | 'settings';\n\n// Enhanced Chat List Component\nconst ChatList: React.FC = () => {\n  const { state, selectChat } = useChat();\n  const [searchTerm, setSearchTerm] = useState('');\n  const currentUser = authService.getUser();\n\n  const getParticipantName = (chat: Chat) => {\n    if (chat.type === 'group') {\n      return chat.groupName || 'Group Chat';\n    }\n    \n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant ? `${otherParticipant.firstName} ${otherParticipant.lastName}` : 'Unknown';\n  };\n\n  const getParticipantAvatar = (chat: Chat) => {\n    if (chat.type === 'group') {\n      return chat.groupName?.charAt(0).toUpperCase() || 'G';\n    }\n    \n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant ? \n      `${otherParticipant.firstName.charAt(0)}${otherParticipant.lastName.charAt(0)}`.toUpperCase() : \n      'U';\n  };\n\n  const isParticipantOnline = (chat: Chat) => {\n    if (chat.type === 'group') return false;\n    \n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant?.isOnline || false;\n  };\n\n  const formatTime = (date: Date | string) => {\n    const messageDate = new Date(date);\n    const now = new Date();\n    const diffInDays = Math.floor((now.getTime() - messageDate.getTime()) / (1000 * 60 * 60 * 24));\n    \n    if (diffInDays === 0) {\n      return messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else if (diffInDays === 1) {\n      return 'Yesterday';\n    } else if (diffInDays < 7) {\n      return messageDate.toLocaleDateString([], { weekday: 'short' });\n    } else {\n      return messageDate.toLocaleDateString([], { month: 'short', day: 'numeric' });\n    }\n  };\n\n  const filteredChats = state.chats.filter(chat =>\n    getParticipantName(chat).toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Chats</h2>\n          <div className=\"flex items-center space-x-2\">\n            <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\">\n              <UserPlus size={20} />\n            </button>\n          </div>\n        </div>\n        \n        {/* Search */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={18} />\n          <input\n            type=\"text\"\n            placeholder=\"Search or start new chat\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full pl-10 pr-4 py-2 bg-gray-100 dark:bg-gray-800 border-0 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-white\"\n          />\n        </div>\n      </div>\n\n      {/* Chat List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {state.loading ? (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        ) : filteredChats.length === 0 ? (\n          <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n            <div className=\"text-center\">\n              <MessageCircle size={48} className=\"mx-auto mb-4 opacity-50\" />\n              <p className=\"font-medium\">No chats yet</p>\n              <p className=\"text-sm\">Go to Contacts to start a conversation</p>\n            </div>\n          </div>\n        ) : (\n          filteredChats.map((chat) => (\n            <motion.div\n              key={chat._id}\n              whileHover={{ backgroundColor: 'rgba(59, 130, 246, 0.05)' }}\n              onClick={() => selectChat(chat)}\n              className={`p-4 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-800 border-b border-gray-100 dark:border-gray-800 ${\n                state.selectedChat?._id === chat._id ? 'bg-blue-50 dark:bg-blue-900/20' : ''\n              }`}\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"relative\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold text-lg\">\n                    {getParticipantAvatar(chat)}\n                  </div>\n                  {isParticipantOnline(chat) && (\n                    <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-900\"></div>\n                  )}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center justify-between\">\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                      {getParticipantName(chat)}\n                    </p>\n                    {chat.lastMessage && (\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {formatTime(chat.lastMessage.createdAt)}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"flex items-center justify-between mt-1\">\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n                      {chat.lastMessage?.content || 'No messages yet'}\n                    </p>\n                    {chat.unreadCount > 0 && (\n                      <div className=\"bg-blue-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center ml-2\">\n                        {chat.unreadCount > 99 ? '99+' : chat.unreadCount}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Enhanced Chat Window Component\nconst ChatWindow: React.FC = () => {\n  const { state, sendMessage } = useChat();\n  const [newMessage, setNewMessage] = useState('');\n  const currentUser = authService.getUser();\n\n  if (!state.selectedChat) {\n    return (\n      <div className=\"flex-1 flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"text-center text-gray-500 dark:text-gray-400\">\n          <MessageCircle size={64} className=\"mx-auto mb-4 opacity-50\" />\n          <h3 className=\"text-lg font-medium mb-2\">Welcome to Chat</h3>\n          <p>Select a conversation from the sidebar to start messaging</p>\n          <p className=\"text-sm mt-2\">Or go to Contacts to start a new conversation</p>\n        </div>\n      </div>\n    );\n  }\n\n  const getParticipantName = (chat: Chat) => {\n    if (chat.type === 'group') {\n      return chat.groupName || 'Group Chat';\n    }\n    \n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant ? `${otherParticipant.firstName} ${otherParticipant.lastName}` : 'Unknown';\n  };\n\n  const isParticipantOnline = (chat: Chat) => {\n    if (chat.type === 'group') return false;\n    \n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant?.isOnline || false;\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !state.selectedChat) return;\n\n    try {\n      await sendMessage(state.selectedChat._id, newMessage.trim());\n      setNewMessage('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const formatTime = (date: Date | string) => {\n    return new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"flex-1 flex flex-col bg-white dark:bg-gray-800\">\n      {/* Chat Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold\">\n              {state.selectedChat.type === 'group' \n                ? (state.selectedChat.groupName || 'G').charAt(0).toUpperCase()\n                : 'U'\n              }\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n                {getParticipantName(state.selectedChat)}\n              </h3>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {isParticipantOnline(state.selectedChat) ? 'Online' : 'Last seen recently'}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\">\n              <Phone size={20} />\n            </button>\n            <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\">\n              <Video size={20} />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 dark:bg-gray-900 chat-background\">\n        {state.messages.map((message) => {\n          const isOwn = message.sender._id === currentUser?._id;\n          return (\n            <motion.div\n              key={message._id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className={`flex ${isOwn ? 'justify-end' : 'justify-start'}`}\n            >\n              <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg shadow-sm ${\n                isOwn \n                  ? 'bg-blue-600 text-white rounded-br-sm' \n                  : 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-bl-sm'\n              }`}>\n                {message.replyTo && (\n                  <div className=\"mb-2 p-2 bg-black bg-opacity-10 rounded text-xs\">\n                    <p className=\"font-medium opacity-80\">{message.replyTo.sender.firstName}</p>\n                    <p className=\"truncate opacity-75\">{message.replyTo.content}</p>\n                  </div>\n                )}\n                \n                <p className=\"text-sm\">{message.content}</p>\n                \n                <div className=\"flex items-center justify-end mt-1 space-x-1\">\n                  <span className=\"text-xs opacity-70\">\n                    {formatTime(message.createdAt)}\n                  </span>\n                  {isOwn && (\n                    <div className=\"text-xs opacity-70\">\n                      ✓✓\n                    </div>\n                  )}\n                </div>\n              </div>\n            </motion.div>\n          );\n        })}\n      </div>\n\n      {/* Message Input */}\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n        <div className=\"flex items-center space-x-2\">\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n            placeholder=\"Type a message...\"\n            className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n          />\n          <button\n            onClick={handleSendMessage}\n            disabled={!newMessage.trim()}\n            className=\"p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <Send size={20} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Home: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<ActiveTab>('chats');\n\n  const tabs = [\n    { id: 'chats' as ActiveTab, label: 'Chats', icon: MessageCircle },\n    { id: 'contacts' as ActiveTab, label: 'Contacts', icon: Users },\n    { id: 'status' as ActiveTab, label: 'Status', icon: Clock },\n    { id: 'settings' as ActiveTab, label: 'Settings', icon: SettingsIcon },\n  ];\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'chats':\n        return (\n          <div className=\"flex h-full\">\n            <div className=\"w-1/3 border-r border-gray-200 dark:border-gray-700\">\n              <ChatList />\n            </div>\n            <ChatWindow />\n          </div>\n        );\n      case 'contacts':\n        return <Contacts />;\n      case 'status':\n        return <Status />;\n      case 'settings':\n        return <Settings />;\n      default:\n        return <ChatList />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900\">\n      <div className=\"mx-auto\">\n        <div className=\"flex h-screen\">\n          {/* Sidebar */}\n          <div className=\"w-16 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 flex flex-col items-center py-4\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`p-3 rounded-lg mb-2 transition-colors ${\n                    activeTab === tab.id\n                      ? 'bg-blue-600 text-white'\n                      : 'text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700'\n                  }`}\n                  title={tab.label}\n                >\n                  <Icon size={24} />\n                </button>\n              );\n            })}\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex-1 bg-white dark:bg-gray-800\">\n            <Routes>\n              <Route path=\"/chat-widget1\" element={<ChatWidget1 />} />\n              <Route path=\"/chat-widget2\" element={<ChatWidget2 />} />\n              <Route path=\"*\" element={renderContent()} />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  MessageCircle, \n  X, \n  Send, \n  Phone, \n  Video, \n  Paperclip, \n  Smile,\n  Search,\n  ArrowLeft,\n  Reply,\n  Check,\n  CheckCheck,\n  MoreVertical\n} from 'lucide-react';\nimport { Chat, Message, User } from '../../../shared/types/chat';\nimport { useCall } from '../../../app/providers/CallContext';\nimport { useChat } from '../../../app/providers/ChatContext';\nimport { authService } from '../../../shared/services/auth.service';\n\nconst ChatWidget: React.FC = () => {\n  const { state, loadChats, selectChat, sendMessage, sendTyping } = useChat();\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const { initiateCall } = useCall();\n  const [isOpen, setIsOpen] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [replyingTo, setReplyingTo] = useState<Message | null>(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    if (isOpen && authService.isAuthenticated()) {\n      loadChats();\n    }\n  }, [isOpen, loadChats]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [state.messages]);\n\n  useEffect(() => {\n    if (state.selectedChat && isTyping) {\n      sendTyping(state.selectedChat._id, true);\n      \n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      \n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n        sendTyping(state.selectedChat!._id, false);\n      }, 1000);\n    }\n\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, [isTyping, state.selectedChat, sendTyping]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !state.selectedChat) return;\n\n    try {\n      await sendMessage(\n        state.selectedChat._id, \n        newMessage.trim(), \n        undefined, // files\n        replyingTo?._id // replyTo\n      );\n      setNewMessage('');\n      setReplyingTo(null);\n      setIsTyping(false);\n      \n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n        sendTyping(state.selectedChat._id, false);\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewMessage(e.target.value);\n    \n    if (!isTyping && e.target.value.trim()) {\n      setIsTyping(true);\n    } else if (isTyping && !e.target.value.trim()) {\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleVoiceCall = () => {\n    if (state.selectedChat) {\n      const currentUser = authService.getUser();\n      const otherParticipants = state.selectedChat.participants.filter(p => p._id !== currentUser?._id);\n      initiateCall(otherParticipants, 'voice', state.selectedChat._id);\n    }\n  };\n\n  const handleVideoCall = () => {\n    if (state.selectedChat) {\n      const currentUser = authService.getUser();\n      const otherParticipants = state.selectedChat.participants.filter(p => p._id !== currentUser?._id);\n      initiateCall(otherParticipants, 'video', state.selectedChat._id);\n    }\n  };\n\n  const formatTime = (date: Date | string) => {\n    return new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const formatLastSeen = (date: Date | string) => {\n    const now = new Date();\n    const lastSeen = new Date(date);\n    const diffInMinutes = Math.floor((now.getTime() - lastSeen.getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return 'just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return lastSeen.toLocaleDateString();\n  };\n\n  const getParticipantName = (chat: Chat) => {\n    if (chat.type === 'group') {\n      return chat.groupName || 'Group Chat';\n    }\n    \n    const currentUser = authService.getUser();\n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant ? `${otherParticipant.firstName} ${otherParticipant.lastName}` : 'Unknown';\n  };\n\n  const getParticipantAvatar = (chat: Chat) => {\n    if (chat.type === 'group') {\n      return chat.groupName?.charAt(0).toUpperCase() || 'G';\n    }\n    \n    const currentUser = authService.getUser();\n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant ? \n      `${otherParticipant.firstName.charAt(0)}${otherParticipant.lastName.charAt(0)}`.toUpperCase() : \n      'U';\n  };\n\n  const isParticipantOnline = (chat: Chat) => {\n    if (chat.type === 'group') return false;\n    \n    const currentUser = authService.getUser();\n    const otherParticipant = chat.participants.find((p: User) => p._id !== currentUser?._id);\n    return otherParticipant?.isOnline || false;\n  };\n\n  const getMessageStatus = (message: Message) => {\n    const currentUser = authService.getUser();\n    if (message.sender._id !== currentUser?._id) return null;\n    \n    if (message.readBy && message.readBy.length > 0) {\n      return <CheckCheck className=\"w-3 h-3 text-blue-400\" />;\n    }\n    if (message.deliveredTo && message.deliveredTo.length > 0) {\n      return <CheckCheck className=\"w-3 h-3 text-gray-400\" />;\n    }\n    return <Check className=\"w-3 h-3 text-gray-400\" />;\n  };\n\n  const filteredChats = state.chats.filter(chat =>\n    getParticipantName(chat).toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const currentUser = authService.getUser();\n  const typingUsersInCurrentChat = state.selectedChat ? \n    state.typingUsers.get(state.selectedChat._id) || [] : [];\n\n  if (!authService.isAuthenticated()) {\n    return (\n      <div className=\"fixed bottom-4 right-4 z-50\">\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={() => setIsOpen(true)}\n          className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg\"\n        >\n          <MessageCircle size={24} />\n        </motion.button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <AnimatePresence>\n        {!isOpen && (\n          <motion.button\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            exit={{ scale: 0 }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => setIsOpen(true)}\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg relative\"\n          >\n            <MessageCircle size={24} />\n            {state.unreadCount > 0 && (\n              <div className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center\">\n                {state.unreadCount > 99 ? '99+' : state.unreadCount}\n              </div>\n            )}\n          </motion.button>\n        )}\n      </AnimatePresence>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.8, y: 20 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-2xl w-96 h-[600px] flex flex-col overflow-hidden border border-gray-200 dark:border-gray-700\"\n          >\n            {/* Header */}\n            <div className=\"bg-green-600 dark:bg-green-700 text-white p-4 flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                {state.selectedChat && (\n                  <button\n                    onClick={() => setSelectedChat(null)}\n                    className=\"p-1 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                  >\n                    <ArrowLeft size={20} />\n                  </button>\n                )}\n                <div>\n                  <h3 className=\"font-semibold\">\n                    {state.selectedChat ? getParticipantName(state.selectedChat) : 'WhatsApp'}\n                  </h3>\n                  {state.selectedChat && (\n                    <p className=\"text-xs text-green-100\">\n                      {isParticipantOnline(state.selectedChat) ? 'online' : \n                       state.selectedChat.participants.find(p => p._id !== currentUser?._id)?.lastSeen ?\n                       `last seen ${formatLastSeen(state.selectedChat.participants.find(p => p._id !== currentUser?._id)!.lastSeen!)}` :\n                       'offline'}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {state.selectedChat && (\n                  <>\n                    <button \n                      onClick={handleVoiceCall}\n                      className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                      title=\"Voice Call\"\n                    >\n                      <Phone size={18} />\n                    </button>\n                    <button \n                      onClick={handleVideoCall}\n                      className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                      title=\"Video Call\"\n                    >\n                      <Video size={18} />\n                    </button>\n                    <button className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\">\n                      <MoreVertical size={18} />\n                    </button>\n                  </>\n                )}\n                <button\n                  onClick={() => setIsOpen(false)}\n                  className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                >\n                  <X size={18} />\n                </button>\n              </div>\n            </div>\n\n            {/* Connection Status */}\n            {!state.isConnected && (\n              <div className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 px-4 py-2 text-sm text-center\">\n                Connecting...\n              </div>\n            )}\n\n            <div className=\"flex-1 overflow-hidden\">\n              {!state.selectedChat ? (\n                // Chat List\n                <div className=\"h-full flex flex-col\">\n                  {/* Search */}\n                  <div className=\"p-3 bg-gray-50 dark:bg-gray-900\">\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                      <input\n                        type=\"text\"\n                        placeholder=\"Search or start new chat\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"w-full pl-9 pr-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-green-500 dark:text-white\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Chat List */}\n                  <div className=\"flex-1 overflow-y-auto\">\n                    {state.loading ? (\n                      <div className=\"flex items-center justify-center h-full\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n                      </div>\n                    ) : filteredChats.length === 0 ? (\n                      <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n                        <div className=\"text-center\">\n                          <MessageCircle size={48} className=\"mx-auto mb-4 opacity-50\" />\n                          <p>No conversations yet</p>\n                          <p className=\"text-sm\">Tap the new chat button to start messaging</p>\n                        </div>\n                      </div>\n                    ) : (\n                      filteredChats.map((chat) => (\n                        <motion.div\n                          key={chat._id}\n                          whileHover={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}\n                          onClick={() => setSelectedChat(chat)}\n                          className=\"p-3 border-b border-gray-100 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"relative\">\n                              <div className=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center text-gray-700 dark:text-gray-300 font-semibold\">\n                                {getParticipantAvatar(chat)}\n                              </div>\n                              {isParticipantOnline(chat) && (\n                                <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-800\"></div>\n                              )}\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                                  {getParticipantName(chat)}\n                                </p>\n                                {chat.lastMessage && (\n                                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                    {formatTime(chat.lastMessage.createdAt)}\n                                  </p>\n                                )}\n                              </div>\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n                                  {chat.lastMessage?.content || 'Tap to start messaging'}\n                                </p>\n                                {chat.unreadCount > 0 && (\n                                  <div className=\"bg-green-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                                    {chat.unreadCount > 99 ? '99+' : chat.unreadCount}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </motion.div>\n                      ))\n                    )}\n                  </div>\n                </div>\n              ) : (\n                // Messages View\n                <div className=\"h-full flex flex-col\">\n                  {/* Messages */}\n                  <div \n                    className=\"flex-1 overflow-y-auto p-4 space-y-2 chat-messages\" \n                    style={{\n                      backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23e5ddd5' fill-opacity='0.4'%3E%3Ccircle cx='30' cy='30' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n                      backgroundColor: '#e5ddd5'\n                    }}\n                    data-messages-container\n                  >\n                    {state.messages.map((message) => {\n                      const isOwn = message.sender._id === currentUser?._id;\n                      return (\n                        <motion.div\n                          key={message._id}\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className={`flex ${isOwn ? 'justify-end' : 'justify-start'} group`}\n                        >\n                          <div className={`max-w-xs px-3 py-2 rounded-lg shadow-sm relative ${\n                            isOwn \n                              ? 'bg-green-500 text-white' \n                              : 'bg-white text-gray-900'\n                          }`}\n                          style={{\n                            borderRadius: isOwn ? '7.5px 7.5px 7.5px 0px' : '7.5px 7.5px 0px 7.5px'\n                          }}>\n                            {message.replyTo && (\n                              <div className={`mb-2 p-2 rounded border-l-4 text-xs ${\n                                isOwn \n                                  ? 'bg-green-600 border-green-300' \n                                  : 'bg-gray-100 border-gray-400'\n                              }`}>\n                                <p className=\"font-medium opacity-80\">{message.replyTo.sender.firstName}</p>\n                                <p className=\"truncate opacity-70\">{message.replyTo.content}</p>\n                              </div>\n                            )}\n                            \n                            {message.content && (\n                              <p className=\"text-sm leading-relaxed\">{message.content}</p>\n                            )}\n                            \n                            <div className=\"flex items-center justify-end mt-1 space-x-1\">\n                              <span className={`text-xs ${isOwn ? 'text-green-100' : 'text-gray-500'}`}>\n                                {formatTime(message.createdAt)}\n                              </span>\n                              {isOwn && (\n                                <div className=\"text-green-100\">\n                                  {getMessageStatus(message)}\n                                </div>\n                              )}\n                            </div>\n                            \n                            {!isOwn && (\n                              <button\n                                onClick={() => setReplyingTo(message)}\n                                className=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 p-1 bg-gray-200 hover:bg-gray-300 rounded transition-opacity\"\n                              >\n                                <Reply size={12} />\n                              </button>\n                            )}\n                          </div>\n                        </motion.div>\n                      );\n                    })}\n                    \n                    {/* Typing Indicator */}\n                    {typingUsersInCurrentChat.length > 0 && (\n                      <div className=\"flex justify-start\">\n                        <div className=\"bg-white rounded-lg px-4 py-2 shadow-sm\">\n                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    \n                    <div ref={messagesEndRef} />\n                  </div>\n\n                  {/* Reply Preview */}\n                  {replyingTo && (\n                    <div className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 border-l-4 border-green-500\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-xs font-medium text-green-600 dark:text-green-400\">\n                            Replying to {replyingTo.sender.firstName}\n                          </p>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300 truncate\">\n                            {replyingTo.content}\n                          </p>\n                        </div>\n                        <button\n                          onClick={() => setReplyingTo(null)}\n                          className=\"text-gray-400 hover:text-gray-600\"\n                        >\n                          <X size={16} />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Message Input */}\n                  <div className=\"p-3 bg-gray-50 dark:bg-gray-900\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n                        <Paperclip size={20} />\n                      </button>\n                      \n                      <div className=\"flex-1 relative\">\n                        <input\n                          type=\"text\"\n                          value={newMessage}\n                          onChange={handleInputChange}\n                          onKeyPress={handleKeyPress}\n                          placeholder=\"Type a message\"\n                          className=\"w-full px-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500 dark:text-white\"\n                        />\n                      </div>\n                      \n                      <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n                        <Smile size={20} />\n                      </button>\n                      \n                      <button\n                        onClick={handleSendMessage}\n                        disabled={!newMessage.trim()}\n                        className=\"p-2 bg-green-500 text-white rounded-full hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <Send size={18} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default ChatWidget;","import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  MessageCircle,\n  X,\n  Send,\n  Phone,\n  Video,\n  Paperclip,\n  Smile,\n  Search,\n  ArrowLeft,\n  Reply,\n  Check,\n  CheckCheck,\n} from 'lucide-react';\nimport { chatService } from '../../../shared/services/chat.service';\nimport { Chat, Message } from '../../../shared/types';\nimport { authService } from '../../../shared/services/auth.service';\nimport { socketService } from '../../../shared/services/socket.service';\nimport { useNavigate } from 'react-router-dom';\n\nconst ChatWidget: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [replyingTo, setReplyingTo] = useState<Message | null>(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const [otherUserTyping, setOtherUserTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout>();\n  const currentUser = authService.getUser();\n  const navigate = useNavigate();\n\n  // Auth check\n  useEffect(() => {\n    setIsAuthenticated(authService.isAuthenticated());\n  }, []);\n\n  useEffect(() => {\n    if (isAuthenticated) loadChats();\n  }, [isAuthenticated]);\n\n  // Load messages when chat is selected\n  useEffect(() => {\n    if (selectedChat) loadMessages(selectedChat._id);\n  }, [selectedChat]);\n\n  // Scroll to bottom on new messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Typing indicator logic\n  useEffect(() => {\n    if (selectedChat && isTyping) {\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n      typingTimeoutRef.current = setTimeout(() => {\n        setIsTyping(false);\n        socketService.sendTyping(selectedChat._id, false);\n      }, 1000);\n    }\n    return () => {\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n    };\n  }, [isTyping, selectedChat]);\n\n  // --- SOCKET LISTENERS: Always active ---\n  useEffect(() => {\n    // Typing: only update if relevant chat is open\n    const handleTyping = (data: { chatId: string; isTyping: boolean; userId: string }) => {\n      if (selectedChat && data.chatId === selectedChat._id && data.userId !== currentUser?._id) {\n        setOtherUserTyping(data.isTyping);\n      }\n    };\n\n    // New message: always update unread count and show notification\n    const handleNewMessage = (message: Message) => {\n      // If the selected chat is open, add message to messages\n      console.log('New message received:', message);\n      if (selectedChat && message.chatId === selectedChat._id) {\n        setMessages(prev => [...prev, message]);\n      }\n      // Always update unread count for the relevant chat\n      setChats(prevChats =>\n        prevChats.map(chat =>\n          chat._id === message.chatId\n            ? { ...chat, unreadCount: (chat.unreadCount || 0) + 1, lastMessage: message }\n            : chat\n        )\n      );\n      // Show toast if the message is for a chat that's not currently open\n      if (!selectedChat || message.chatId !== selectedChat._id) {\n        window.dispatchEvent(\n          new CustomEvent('toast', {\n            detail: {\n              type: 'notification',\n              message: `New message from ${message.sender.firstName}: ${message.content}`,\n            },\n          })\n        );\n      }\n    };\n\n    socketService.on('userTyping', handleTyping);\n    socketService.on('newMessage', handleNewMessage);\n\n    return () => {\n      socketService.off('userTyping', handleTyping);\n      socketService.off('newMessage', handleNewMessage);\n    };\n  }, [selectedChat, currentUser]);\n\n  // --- Data Loaders ---\n  const loadChats = async () => {\n    try {\n      setLoading(true);\n      const response = await chatService.getUserChats();\n      const chatsData = response.data?.chats || response.data?.items || [];\n      setChats(chatsData);\n    } catch (error) {\n      console.error('Failed to load chats:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadMessages = async (chatId: string) => {\n    try {\n      setLoading(true);\n      const response = await chatService.getChatMessages(chatId);\n      const messagesData = response.data?.messages || response.data?.items || [];\n      setMessages(messagesData);\n    } catch (error) {\n      console.error('Failed to load messages:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- Input & Send ---\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewMessage(e.target.value);\n    if (!isTyping && e.target.value.trim()) {\n      setIsTyping(true);\n      if (selectedChat) socketService.sendTyping(selectedChat._id, true);\n    } else if (isTyping && !e.target.value.trim()) {\n      setIsTyping(false);\n      if (selectedChat) socketService.sendTyping(selectedChat._id, false);\n    }\n  };\n\n  const sendMessageHandler = async () => {\n    if (!newMessage.trim() || !selectedChat) return;\n    try {\n      socketService.sendMessage({\n        chatId: selectedChat._id,\n        content: newMessage.trim(),\n        replyTo: replyingTo?._id,\n      });\n      setNewMessage('');\n      setReplyingTo(null);\n      setIsTyping(false);\n      socketService.sendTyping(selectedChat._id, false);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      sendMessageHandler();\n    }\n  };\n\n  // --- Helpers ---\n  const formatTime = (date: Date | string) =>\n    new Date(date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n  const formatLastSeen = (date: Date | string) => {\n    const now = new Date();\n    const lastSeen = new Date(date);\n    const diffInMinutes = Math.floor((now.getTime() - lastSeen.getTime()) / (1000 * 60));\n    if (diffInMinutes < 1) return 'just now';\n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n    return lastSeen.toLocaleDateString();\n  };\n\n  const getParticipantName = (chat: Chat) => {\n    if (chat.type === 'group') return chat.groupName || 'Group Chat';\n    const other = chat.participants.find(p => p._id !== currentUser?._id);\n    return other ? `${other.firstName} ${other.lastName}` : 'Unknown';\n  };\n\n  const getParticipantAvatar = (chat: Chat) => {\n    if (chat.type === 'group') return chat.groupName?.charAt(0).toUpperCase() || 'G';\n    const other = chat.participants.find(p => p._id !== currentUser?._id);\n    return other\n      ? `${other.firstName.charAt(0)}${other.lastName.charAt(0)}`.toUpperCase()\n      : 'U';\n  };\n\n  const isParticipantOnline = (chat: Chat) => {\n    if (chat.type === 'group') return false;\n    const other = chat.participants.find(p => p._id !== currentUser?._id);\n    return other?.isOnline || false;\n  };\n\n  const getMessageStatus = (message: Message) => {\n    if (message.sender._id !== currentUser?._id) return null;\n    if (message.readBy && message.readBy.length > 0) {\n      return <CheckCheck className=\"w-3 h-3 text-blue-400\" />;\n    }\n    if (message.deliveredTo && message.deliveredTo.length > 0) {\n      return <CheckCheck className=\"w-3 h-3 text-gray-400\" />;\n    }\n    return <Check className=\"w-3 h-3 text-gray-400\" />;\n  };\n\n  const filteredChats = chats.filter(chat =>\n    getParticipantName(chat).toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // --- UI ---\n  if (!isAuthenticated) {\n    return (\n      <div className=\"fixed bottom-4 right-4 z-50\">\n        <motion.button\n          whileHover={{ scale: 1.1 }}\n          whileTap={{ scale: 0.9 }}\n          onClick={() => navigate('/signup')}\n          className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg\"\n        >\n          <MessageCircle size={24} />\n        </motion.button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <AnimatePresence>\n        {!isOpen && (\n          <motion.button\n            initial={{ scale: 0 }}\n            animate={{ scale: 1 }}\n            exit={{ scale: 0 }}\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => {\n              if (!isAuthenticated) {\n                navigate('/signup');\n              } else {\n                setIsOpen(true);\n              }\n            }}\n            className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-lg relative\"\n          >\n            <MessageCircle size={24} />\n            {/* Badge for total unread messages */}\n            {chats.reduce((count, chat) => count + (chat.unreadCount || 0), 0) > 0 && (\n              <div className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center\">\n                {chats.reduce((count, chat) => count + (chat.unreadCount || 0), 0) > 99\n                  ? '99+'\n                  : chats.reduce((count, chat) => count + (chat.unreadCount || 0), 0)}\n              </div>\n            )}\n          </motion.button>\n        )}\n      </AnimatePresence>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.8, y: 20 }}\n            className=\"bg-white dark:bg-gray-800 rounded-lg shadow-2xl w-96 h-[600px] flex flex-col overflow-hidden border border-gray-200 dark:border-gray-700\"\n          >\n            {/* Header */}\n            <div className=\"bg-green-600 dark:bg-green-700 text-white p-4 flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                {selectedChat && (\n                  <button\n                    onClick={() => setSelectedChat(null)}\n                    className=\"p-1 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                  >\n                    <ArrowLeft size={20} />\n                  </button>\n                )}\n                <div>\n                  <h3 className=\"font-semibold\">\n                    {selectedChat ? getParticipantName(selectedChat) : 'WhatsApp'}\n                  </h3>\n                  {selectedChat && (\n                    <p className=\"text-xs text-green-100\">\n                      {isParticipantOnline(selectedChat) ? 'online' :\n                        selectedChat.participants.find(p => p._id !== currentUser?._id)?.lastSeen ?\n                          `last seen ${formatLastSeen(selectedChat.participants.find(p => p._id !== currentUser?._id)!.lastSeen!)}` :\n                          'offline'}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {selectedChat && (\n                  <>\n                    <button\n                      onClick={() => {/* handle audio call */}}\n                      className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                      title=\"Audio Call\"\n                    >\n                      <Phone size={18} />\n                    </button>\n                    <button\n                      onClick={() => {/* handle video call */}}\n                      className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                      title=\"Video Call\"\n                    >\n                      <Video size={18} />\n                    </button>\n                  </>\n                )}\n                <button\n                  onClick={() => setIsOpen(false)}\n                  className=\"p-2 hover:bg-green-700 dark:hover:bg-green-600 rounded\"\n                  title=\"Close\"\n                >\n                  <X size={18} />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex-1 overflow-hidden\">\n              {!selectedChat ? (\n                // Chat List\n                <div className=\"h-full flex flex-col\">\n                  {/* Search */}\n                  <div className=\"p-3 bg-gray-50 dark:bg-gray-900\">\n                    <div className=\"relative\">\n                      <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                      <input\n                        type=\"text\"\n                        placeholder=\"Search or start new chat\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                        className=\"w-full pl-9 pr-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-green-500 dark:text-white\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Chat List */}\n                  <div className=\"flex-1 overflow-y-auto\">\n                    {loading ? (\n                      <div className=\"flex items-center justify-center h-full\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n                      </div>\n                    ) : filteredChats.length === 0 ? (\n                      <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n                        <div className=\"text-center\">\n                          <MessageCircle size={48} className=\"mx-auto mb-4 opacity-50\" />\n                          <p>No conversations yet</p>\n                          <p className=\"text-sm\">Tap the new chat button to start messaging</p>\n                        </div>\n                      </div>\n                    ) : (\n                      filteredChats.map((chat) => (\n                        <motion.div\n                          key={chat._id}\n                          whileHover={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}\n                          onClick={() => setSelectedChat(chat)}\n                          className=\"p-3 border-b border-gray-100 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"relative\">\n                              <div className=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center text-gray-700 dark:text-gray-300 font-semibold\">\n                                {getParticipantAvatar(chat)}\n                              </div>\n                              {isParticipantOnline(chat) && (\n                                <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-800\"></div>\n                              )}\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                                  {getParticipantName(chat)}\n                                </p>\n                                {chat.lastMessage && (\n                                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                    {formatTime(chat.lastMessage.createdAt)}\n                                  </p>\n                                )}\n                              </div>\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n                                  {chat.lastMessage?.content || 'Tap to start messaging'}\n                                </p>\n                                {chat.unreadCount > 0 && (\n                                  <div className=\"bg-green-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center ml-2\">\n                                    {chat.unreadCount > 99 ? '99+' : chat.unreadCount}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </motion.div>\n                      ))\n                    )}\n                  </div>\n                </div>\n              ) : (\n                // Messages View\n                <div className=\"h-full flex flex-col\">\n                  {/* Messages */}\n                  <div\n                    className=\"flex-1 overflow-y-auto p-4 space-y-2 chat-messages\"\n                    style={{\n                      backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23e5ddd5' fill-opacity='0.4'%3E%3Ccircle cx='30' cy='30' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n                      backgroundColor: '#e5ddd5'\n                    }}\n                    data-messages-container\n                  >\n                    {messages.map((message) => {\n                      const isOwn = message.sender._id === currentUser?._id;\n                      return (\n                        <motion.div\n                          key={message._id}\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          className={`flex ${isOwn ? 'justify-end' : 'justify-start'} group`}\n                        >\n                          <div className={`max-w-xs px-3 py-2 rounded-lg shadow-sm relative ${isOwn\n                              ? 'bg-green-500 text-white'\n                              : 'bg-white text-gray-900'\n                            }`}\n                            style={{\n                              borderRadius: isOwn ? '7.5px 7.5px 7.5px 0px' : '7.5px 7.5px 0px 7.5px'\n                            }}>\n                            {message.replyTo && (\n                              <div className={`mb-2 p-2 rounded border-l-4 text-xs ${isOwn\n                                  ? 'bg-green-600 border-green-300'\n                                  : 'bg-gray-100 border-gray-400'\n                                }`}>\n                                <p className=\"font-medium opacity-80\">{message.replyTo.sender.firstName}</p>\n                                <p className=\"truncate opacity-70\">{message.replyTo.content}</p>\n                              </div>\n                            )}\n\n                            {message.content && (\n                              <p className=\"text-sm leading-relaxed\">{message.content}</p>\n                            )}\n\n                            {message.media && message.media.length > 0 && (\n                              <div className=\"mt-2 space-y-2\">\n                                {message.media.map((file) => (\n                                  <div key={file._id}>\n                                    {file.mimetype.startsWith('image/') ? (\n                                      <img\n                                        src={file.url}\n                                        alt={file.originalName}\n                                        className=\"max-w-full h-auto rounded\"\n                                      />\n                                    ) : (\n                                      <a\n                                        href={file.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className=\"flex items-center space-x-2 text-xs underline\"\n                                      >\n                                        <Paperclip size={12} />\n                                        <span>{file.originalName}</span>\n                                      </a>\n                                    )}\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n\n                            <div className=\"flex items-center justify-end mt-1 space-x-1\">\n                              <span className={`text-xs ${isOwn ? 'text-green-100' : 'text-gray-500'}`}>\n                                {formatTime(message.createdAt)}\n                              </span>\n                              {isOwn && (\n                                <div className=\"text-green-100\">\n                                  {getMessageStatus(message)}\n                                </div>\n                              )}\n                            </div>\n\n                            {!isOwn && (\n                              <button\n                                onClick={() => setReplyingTo(message)}\n                                className=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 p-1 bg-gray-200 hover:bg-gray-300 rounded transition-opacity\"\n                              >\n                                <Reply size={12} />\n                              </button>\n                            )}\n                          </div>\n                        </motion.div>\n                      );\n                    })}\n\n                    {/* Typing Indicator for other user */}\n                    {otherUserTyping && (\n                      <div className=\"flex justify-start\">\n                        <div className=\"bg-white rounded-lg px-4 py-2 shadow-sm\">\n                          <div className=\"flex space-x-1\">\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                            <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    <div ref={messagesEndRef} />\n                  </div>\n\n                  {/* Reply Preview */}\n                  {replyingTo && (\n                    <div className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 border-l-4 border-green-500\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-xs font-medium text-green-600 dark:text-green-400\">\n                            Replying to {replyingTo.sender.firstName}\n                          </p>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300 truncate\">\n                            {replyingTo.content}\n                          </p>\n                        </div>\n                        <button\n                          onClick={() => setReplyingTo(null)}\n                          className=\"text-gray-400 hover:text-gray-600\"\n                        >\n                          <X size={16} />\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Message Input */}\n                  <div className=\"p-3 bg-gray-50 dark:bg-gray-900\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n                        <Paperclip size={20} />\n                      </button>\n\n                      <div className=\"flex-1 relative\">\n                        <input\n                          type=\"text\"\n                          value={newMessage}\n                          onChange={handleInputChange}\n                          onKeyPress={handleKeyPress}\n                          placeholder=\"Type a message\"\n                          className=\"w-full px-4 py-2 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-full focus:outline-none focus:ring-2 focus:ring-green-500 dark:text-white\"\n                        />\n                      </div>\n\n                      <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\">\n                        <Smile size={20} />\n                      </button>\n\n                      <button\n                        onClick={sendMessageHandler}\n                        disabled={!newMessage.trim()}\n                        className=\"p-2 bg-green-500 text-white rounded-full hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <Send size={18} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default ChatWidget;","import React, { useState, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Search, \n  UserPlus, \n  Phone, \n  Video, \n  MessageCircle, \n  Users,\n  Star,\n  Loader\n} from 'lucide-react';\nimport { useChat } from '../../../app/providers/ChatContext';\nimport { chatService } from '../../../shared/services/chat.service';\nimport { User } from '../../../shared/types';\nimport { authService } from '../../../shared/services/auth.service';\n\ninterface ContactUser extends User {\n  isBlocked?: boolean;\n  isFavorite?: boolean;\n  lastSeen?: Date;\n}\n\nconst Contacts: React.FC = () => {\n  const [contacts, setContacts] = useState<ContactUser[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [creatingChat, setCreatingChat] = useState<string | null>(null);\n  \n  const { selectChat, loadChats } = useChat();\n  const currentUser = authService.getUser();\n\n  const loadContacts = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(\n        `http://localhost:5000/api/auth/users?page=${page}&limit=10&sortBy=createdAt&sortOrder=desc`,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            ...authService.getAuthHeaders(),\n          },\n        }\n      );\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          authService.logout();\n          throw new Error('Authentication failed. Please login again.');\n        }\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      // Handle different possible response structures\n      let users: User[] = [];\n      let pagination = null;\n\n      // Try to extract users from various possible response formats\n      if (data && typeof data === 'object') {\n        if (data.success && data.data) {\n          if (Array.isArray(data.data.users)) {\n            users = data.data.users;\n            pagination = data.data.pagination;\n          } else if (Array.isArray(data.data)) {\n            users = data.data;\n          }\n        } else if (Array.isArray(data.users)) {\n          users = data.users;\n          pagination = data.pagination;\n        } else if (Array.isArray(data)) {\n          users = data;\n        }\n      }\n\n      // Validate that we have an array of users\n      if (!Array.isArray(users)) {\n        console.error('Invalid users data received:', data);\n        throw new Error('Invalid response format from server');\n      }\n\n      // Filter out current user and validate user objects\n      const validUsers = users.filter(user => {\n        // Check if user object is valid\n        if (!user || typeof user !== 'object' || !user._id) {\n          console.warn('Invalid user object:', user);\n          return false;\n        }\n        \n        // Filter out current user\n        return user._id !== currentUser?._id;\n      });\n\n      if (page === 1) {\n        setContacts(validUsers);\n      } else {\n        setContacts(prev => [...prev, ...validUsers]);\n      }\n      \n      // Set hasMore based on pagination or if we got fewer users than requested\n      if (pagination && typeof pagination === 'object') {\n        setHasMore(pagination.hasNext === true);\n      } else {\n        setHasMore(validUsers.length === 10);\n      }\n      \n    } catch (error) {\n      console.error('Failed to load contacts:', error);\n      setError(error instanceof Error ? error.message : 'Failed to load contacts');\n    } finally {\n      setLoading(false);\n    }\n  }, [page, currentUser?._id]);\n\n  useEffect(() => {\n    loadContacts();\n  }, [loadContacts]);\n\n  const handleStartChat = async (contact: ContactUser) => {\n    if (creatingChat === contact._id) return;\n    \n    try {\n      setCreatingChat(contact._id);\n      setError(null);\n      \n      // Create individual chat with the selected contact\n      const response = await chatService.createIndividualChat(contact._id);\n      \n      if (response.success && response.data) {\n        // Reload chats to get the new chat\n        await loadChats();\n        \n        // Select the newly created chat\n        selectChat(response.data);\n      } else {\n        throw new Error(response.message || 'Failed to create chat');\n      }\n    } catch (error) {\n      console.error('Failed to start chat:', error);\n      setError(error instanceof Error ? error.message : 'Failed to start chat');\n    } finally {\n      setCreatingChat(null);\n    }\n  };\n\n  const handleLoadMore = () => {\n    if (!loading && hasMore) {\n      setPage(prev => prev + 1);\n    }\n  };\n\n  const filteredContacts = contacts.filter(contact => {\n    if (!contact || typeof contact !== 'object') return false;\n    \n    const firstName = String(contact.firstName || '');\n    const lastName = String(contact.lastName || '');\n    const email = String(contact.email || '');\n    const fullName = `${firstName} ${lastName}`.toLowerCase();\n    const searchLower = searchTerm.toLowerCase();\n    \n    return fullName.includes(searchLower) || email.toLowerCase().includes(searchLower);\n  });\n\n  const favoriteContacts = filteredContacts.filter(contact => contact.isFavorite);\n  const regularContacts = filteredContacts.filter(contact => !contact.isFavorite);\n\n  const formatLastSeen = (date: Date | string | undefined) => {\n    if (!date) return 'Never';\n    \n    try {\n      const now = new Date();\n      const lastSeen = new Date(date);\n      const diffInMinutes = Math.floor((now.getTime() - lastSeen.getTime()) / (1000 * 60));\n      \n      if (diffInMinutes < 1) return 'just now';\n      if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n      if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n      return lastSeen.toLocaleDateString();\n    } catch (error) {\n      return 'Unknown';\n    }\n  };\n\n  const ContactItem: React.FC<{ contact: ContactUser }> = ({ contact }) => {\n    // Validate contact data\n    if (!contact || typeof contact !== 'object' || !contact._id) {\n      return null;\n    }\n\n    // Safely extract and convert properties to strings\n    const firstName = String(contact.firstName || 'Unknown');\n    const lastName = String(contact.lastName || 'User');\n    const email = String(contact.email || 'No email');\n    const fullName = `${firstName} ${lastName}`;\n    const initials = `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase();\n\n    return (\n      <motion.div\n        whileHover={{ backgroundColor: 'rgba(59, 130, 246, 0.05)' }}\n        className=\"p-4 hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer border-b border-gray-100 dark:border-gray-700\"\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"relative\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 to-blue-600 rounded-full flex items-center justify-center text-white font-semibold\">\n              {initials}\n            </div>\n            {contact.isOnline && (\n              <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-900\"></div>\n            )}\n            {contact.isFavorite && (\n              <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-yellow-500 rounded-full flex items-center justify-center\">\n                <Star size={10} className=\"text-white fill-current\" />\n              </div>\n            )}\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                {fullName}\n              </p>\n              <div className=\"flex items-center space-x-1\">\n                <button \n                  className=\"p-1 text-gray-400 hover:text-green-600 rounded transition-colors\"\n                  title=\"Voice Call\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    // TODO: Implement voice call\n                  }}\n                >\n                  <Phone size={16} />\n                </button>\n                <button \n                  className=\"p-1 text-gray-400 hover:text-blue-600 rounded transition-colors\"\n                  title=\"Video Call\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    // TODO: Implement video call\n                  }}\n                >\n                  <Video size={16} />\n                </button>\n                <button \n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleStartChat(contact);\n                  }}\n                  disabled={creatingChat === contact._id}\n                  className=\"p-1 text-gray-400 hover:text-blue-600 rounded transition-colors disabled:opacity-50\"\n                  title=\"Start Chat\"\n                >\n                  {creatingChat === contact._id ? (\n                    <Loader size={16} className=\"animate-spin\" />\n                  ) : (\n                    <MessageCircle size={16} />\n                  )}\n                </button>\n              </div>\n            </div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 truncate\">\n              {email}\n            </p>\n            <p className=\"text-xs text-gray-400\">\n              {contact.isOnline ? 'Online' : `Last seen ${formatLastSeen(contact.lastSeen)}`}\n            </p>\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Contacts</h2>\n          <button className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800\">\n            <UserPlus size={20} />\n          </button>\n        </div>\n        \n        {/* Search */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={18} />\n          <input\n            type=\"text\"\n            placeholder=\"Search contacts...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-full pl-10 pr-4 py-2 bg-gray-100 dark:bg-gray-800 border-0 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-white\"\n          />\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"p-4 bg-red-50 dark:bg-red-900/20 border-l-4 border-red-500\">\n          <p className=\"text-sm text-red-700 dark:text-red-400\">{error}</p>\n          <button \n            onClick={() => {\n              setError(null);\n              setPage(1);\n              loadContacts();\n            }}\n            className=\"text-sm text-red-600 dark:text-red-400 hover:underline mt-1\"\n          >\n            Try again\n          </button>\n        </div>\n      )}\n\n      {/* Contacts List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {loading && page === 1 ? (\n          <div className=\"flex items-center justify-center h-full\">\n            <div className=\"text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n              <p className=\"text-sm text-gray-500\">Loading contacts...</p>\n            </div>\n          </div>\n        ) : (\n          <>\n            {/* Favorites */}\n            {favoriteContacts.length > 0 && (\n              <div>\n                <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n                  <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex items-center\">\n                    <Star size={16} className=\"mr-2 text-yellow-500\" />\n                    Favorites ({favoriteContacts.length})\n                  </h3>\n                </div>\n                {favoriteContacts.map((contact) => (\n                  <ContactItem key={contact._id} contact={contact} />\n                ))}\n              </div>\n            )}\n\n            {/* All Contacts */}\n            {regularContacts.length > 0 && (\n              <div>\n                <div className=\"px-4 py-2 bg-gray-50 dark:bg-gray-800\">\n                  <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex items-center\">\n                    <Users size={16} className=\"mr-2\" />\n                    All Contacts ({regularContacts.length})\n                  </h3>\n                </div>\n                {regularContacts.map((contact) => (\n                  <ContactItem key={contact._id} contact={contact} />\n                ))}\n              </div>\n            )}\n\n            {/* Load More Button */}\n            {hasMore && !loading && regularContacts.length > 0 && (\n              <div className=\"p-4\">\n                <button\n                  onClick={handleLoadMore}\n                  className=\"w-full py-2 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  Load More Contacts\n                </button>\n              </div>\n            )}\n\n            {/* Loading More */}\n            {loading && page > 1 && (\n              <div className=\"flex items-center justify-center p-4\">\n                <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\n                <span className=\"ml-2 text-sm text-gray-500\">Loading more...</span>\n              </div>\n            )}\n\n            {/* Empty State */}\n            {filteredContacts.length === 0 && !loading && !error && (\n              <div className=\"flex items-center justify-center h-full text-gray-500 dark:text-gray-400\">\n                <div className=\"text-center\">\n                  <Users size={48} className=\"mx-auto mb-4 opacity-50\" />\n                  <p className=\"font-medium\">No contacts found</p>\n                  <p className=\"text-sm\">\n                    {searchTerm ? 'Try adjusting your search terms' : 'No users available to connect with'}\n                  </p>\n                  {!searchTerm && (\n                    <button\n                      onClick={() => {\n                        setPage(1);\n                        loadContacts();\n                      }}\n                      className=\"mt-2 text-blue-600 hover:text-blue-800 text-sm\"\n                    >\n                      Refresh contacts\n                    </button>\n                  )}\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["Settings","theme","toggleTheme","useTheme","notifications","setNotifications","useState","sounds","setSounds","readReceipts","setReadReceipts","lastSeen","setLastSeen","SettingItem","_ref","icon","title","subtitle","action","onClick","_jsx","motion","div","whileHover","backgroundColor","className","children","_jsxs","ChevronRight","size","ToggleSwitch","_ref2","enabled","onChange","concat","User","Moon","Sun","Bell","Volume2","VolumeX","Eye","EyeOff","Globe","Shield","Smartphone","Palette","HelpCircle","Status","statuses","setStatuses","myStatuses","setMyStatuses","loading","setLoading","useEffect","setTimeout","id","user","name","avatar","content","type","data","timestamp","Date","now","views","isViewed","formatTime","date","diffInHours","Math","floor","getTime","toLocaleDateString","StatusItem","status","isOwn","style","Plus","MoreVertical","Camera","Type","_Fragment","length","map","Clock","ChatList","state","selectChat","useChat","searchTerm","setSearchTerm","currentUser","authService","getUser","getParticipantName","chat","groupName","otherParticipant","participants","find","p","_id","firstName","lastName","getParticipantAvatar","_chat$groupName","charAt","toUpperCase","isParticipantOnline","isOnline","messageDate","diffInDays","toLocaleTimeString","hour","minute","weekday","month","day","filteredChats","chats","filter","toLowerCase","includes","UserPlus","Search","placeholder","value","e","target","MessageCircle","_state$selectedChat","_chat$lastMessage","selectedChat","lastMessage","createdAt","unreadCount","ChatWindow","sendMessage","newMessage","setNewMessage","handleSendMessage","async","trim","error","console","Phone","Video","messages","message","sender","initial","opacity","y","animate","replyTo","onKeyPress","key","disabled","Send","Home","activeTab","setActiveTab","tabs","label","Users","SettingsIcon","tab","Icon","Routes","Route","path","element","ChatWidget1","ChatWidget2","renderContent","Contacts","ChatWidget","_state$selectedChat$p","loadChats","sendTyping","setSelectedChat","initiateCall","useCall","isOpen","setIsOpen","replyingTo","setReplyingTo","isTyping","setIsTyping","messagesEndRef","useRef","typingTimeoutRef","isAuthenticated","scrollToBottom","current","clearTimeout","_messagesEndRef$curre","scrollIntoView","behavior","undefined","getMessageStatus","readBy","CheckCheck","deliveredTo","Check","typingUsersInCurrentChat","typingUsers","get","AnimatePresence","button","scale","exit","whileTap","ArrowLeft","diffInMinutes","formatLastSeen","handleVoiceCall","otherParticipants","handleVideoCall","X","isConnected","backgroundImage","borderRadius","Reply","animationDelay","ref","Paperclip","preventDefault","Smile","_selectedChat$partici","setIsAuthenticated","setChats","setMessages","otherUserTyping","setOtherUserTyping","navigate","useNavigate","loadMessages","socketService","handleTyping","chatId","userId","handleNewMessage","log","prev","prevChats","_objectSpread","window","dispatchEvent","CustomEvent","detail","on","off","_response$data","_response$data2","response","chatService","getUserChats","chatsData","items","_response$data3","_response$data4","getChatMessages","messagesData","sendMessageHandler","other","reduce","count","media","file","mimetype","startsWith","src","url","alt","originalName","href","rel","contacts","setContacts","setError","page","setPage","hasMore","setHasMore","creatingChat","setCreatingChat","loadContacts","useCallback","fetch","headers","getAuthHeaders","ok","logout","Error","json","users","pagination","success","Array","isArray","validUsers","warn","hasNext","filteredContacts","contact","String","email","fullName","searchLower","favoriteContacts","isFavorite","regularContacts","ContactItem","initials","Star","stopPropagation","createIndividualChat","handleStartChat","Loader","handleLoadMore"],"sourceRoot":""}