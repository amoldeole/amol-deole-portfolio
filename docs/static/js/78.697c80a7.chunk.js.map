{"version":3,"file":"static/js/78.697c80a7.chunk.js","mappings":"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","sources":["shared/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Navigate, useLocation, Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../app/providers/AuthContext';\nimport { motion } from 'framer-motion';\nimport { Mail, User } from 'lucide-react';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { login, isAuthenticated, user } = useAuth(); // Make sure user is available\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from?.pathname || '/admin';\n\n  // Determine if this is the admin login route\n  const isAdminRoute = location.pathname.startsWith('/admin');\n\n  // Redirect logic based on role\n  if (isAuthenticated) {\n    if (user?.role === 'admin') {\n      return <Navigate to={from} replace />;\n    } else {\n      return <Navigate to=\"/\" replace />;\n    }\n  }\n\n  // Handler for user icon click\n  const handleUserIconClick = () => {\n    navigate('/');\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      await login(email, password);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <section className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900\">\n      <div className=\"max-w-md w-full mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"bg-white dark:bg-gray-900 rounded-2xl shadow-2xl p-8\"\n        >\n          <div className=\"flex flex-col items-center mb-8\">\n            <div\n              className=\"relative inline-block mb-4 cursor-pointer\"\n              onClick={!isAdminRoute ? handleUserIconClick : undefined}\n              title={!isAdminRoute ? \"Go to Home\" : undefined}\n            >\n              {isAdminRoute ? (\n                <>\n                  <motion.img\n                    whileHover={{ scale: 1.05 }}\n                    src=\"/assets/img/me.jpg\"\n                    alt=\"Amol Deole\"\n                    className=\"w-24 h-24 md:w-28 md:h-28 rounded-full mx-auto shadow-xl border-4 border-white dark:border-gray-700\"\n                  />\n                  <motion.div\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 20, repeat: Infinity, ease: \"linear\" }}\n                    className=\"absolute -inset-2 rounded-full bg-gradient-to-r from-primary-500 to-secondary-500 opacity-20 blur-xl\"\n                  />\n                </>\n              ) : (\n                <User className=\"w-24 h-24 md:w-28 md:h-28 text-gray-400 dark:text-gray-600 mx-auto bg-gray-100 dark:bg-gray-800 rounded-full p-6\" />\n              )}\n            </div>\n            <h2 className=\"text-3xl font-extrabold text-gray-900 dark:text-white mb-2 font-poppins\">\n              {isAdminRoute ? 'Admin Login' : 'Login'}\n            </h2>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {isAdminRoute\n                ? 'Sign in to access the admin dashboard'\n                : 'Sign in to your account'}\n            </p>\n          </div>\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {error && (\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n                {error}\n              </div>\n            )}\n\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  required\n                  className=\"relative block w-full px-4 py-3 border border-gray-300 dark:border-gray-700 placeholder-gray-500 text-gray-900 dark:text-white rounded-t-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:z-10 bg-white dark:bg-gray-800\"\n                  placeholder=\"Email address\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  autoComplete=\"username\"\n                />\n              </div>\n              <div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  required\n                  className=\"relative block w-full px-4 py-3 border border-gray-300 dark:border-gray-700 placeholder-gray-500 text-gray-900 dark:text-white rounded-b-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:z-10 bg-white dark:bg-gray-800\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  autoComplete=\"current-password\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 transition-all duration-200\"\n              >\n                {isLoading ? 'Signing in...' : (\n                  <>\n                    <Mail size={18} className=\"mr-2\" />\n                    Sign in\n                  </>\n                )}\n              </button>\n            </div>\n          </form>\n          {/* Show sign up prompt only if NOT admin route */}\n          {!isAdminRoute && (\n            <div className=\"mt-8 text-center\">\n              <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                Don&apos;t have login credentials?{' '}\n                <Link to=\"/signup\" className=\"text-blue-500 hover:underline font-medium\">\n                  Sign up here\n                </Link>\n              </p>\n              <p className=\"text-xs text-gray-400 mt-2\">\n                Create an account to access chat and portfolio features.\n              </p>\n            </div>\n          )}\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;"],"names":["Login","_location$state","_location$state$from","email","setEmail","useState","password","setPassword","error","setError","isLoading","setIsLoading","login","isAuthenticated","user","useAuth","location","useLocation","navigate","useNavigate","from","state","pathname","isAdminRoute","startsWith","role","_jsx","Navigate","to","replace","className","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","onClick","undefined","handleUserIconClick","title","_Fragment","img","whileHover","scale","src","alt","rotate","repeat","Infinity","ease","User","onSubmit","async","e","preventDefault","err","Error","message","id","name","type","required","placeholder","value","onChange","target","autoComplete","disabled","Mail","size","Link"],"sourceRoot":""}